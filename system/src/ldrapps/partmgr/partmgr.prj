[project]
name=partmgr

[config]
0=Common

[vars]
aa=wasm
cc=wcc386
cpp=@wpp386
ld=wlink

*asm=$(outdir)\$(*cur_fp).obj|$(*cur_name)| @echo $(*cur_name) | \
     $(aa) $(ainc) $(aflags)$*.obj $(*cur_name)

*c=$(outdir)\$(*cur_fp).obj|$(*cur_name)| @echo $(*cur_name) | \
     $(cc) $(cinc) $(cflags)$*.obj $(*cur_name)

*cpp=$(outdir)\$(*cur_fp).obj|$(*cur_name)| @echo $(*cur_name) | \
     $(cpp) $(cinc) $(cppflags)$*.obj $(*cur_name)

*inc=$(outdir)\$(*cur_fp).h|$(*cur_name)| @echo $(*cur_name) | \
     inc2h $(*cur_name) $@ /p1

*ord=$(outdir)\$(*cur_fp)_ord.h|$(*cur_pref).ref| @echo $(*cur_name) | \
     ref2lbc ord $(*cur_pref).ref $@

aflags=-mf -4p -zq -i=%(QS_BASE)\hc -fo=

cflags=-4s %(QS_CFLAGS) -s -mf -ox %(QS_WCCINC) \
       -fi=%(QS_MHDR) -i=. -i=$(outdir) -fo=

cppflags=-zv $(cflags)

dlldir=dll
cinc=
ccinc=$(cinc)
ainc=
bld_dir=bld
outdir=$(bld_dir)\$(config)
outname=$(name).dll
&lnk=$(outdir)\$(name).lnk
del=del
copy=copy

[vars.linux]
del=rm
copy=cp

[files]
..\runtime\qsinit.ord
..\..\hc\inc\parttab.inc ..\..\hc\inc\dpmi.inc
..\..\hc\inc\seldesc.inc
..\..\init\inc\qsinit.inc ..\..\init\inc\dskinfo.inc
..\..\hc\inc\qsconst.inc
partmgr.c mount.c pboot.c pscan.c phlp.cpp format.c pclone.cpp
se.asm lvm.cpp ptmgr.cpp gptmgr.cpp hpfs\formatfs.c hpfs\boot.asm
hpfs\fshelp.c chkbm.cpp

[make_footer]
$(outdir) : .DIRECTORY

MAKEDIRS : $(outdir)

hello : .SYMBOLIC
    @echo Building $(name)...

nolink : MAKEDIRS hello @@wait $(**ord) $(**inc) @@wait $(**c) $(**cpp) $(**asm)

clean : .CLEAN $(outdir)\*.obj $(outdir)\*.lst $(outdir)\*.h $(outdir)\$(name).*
    @echo Cleaning $(name)...

[&lnk]
sys os2v2_dll
name $(outname)
file /[[$(**c)! !,]]
file /[[$(**cpp)! !,]]
file /[[$(**asm)! !,]]
file %(appinit_lib)\bld\Common\initdll.obj
lib %(appinit_lib)\runtime.lib
lib %(appinit_lib)\cpplib.lib
lib %(WATCOM)\lib386\plib3s.lib
op map=$(name).map
sort global
op togglerelocs
op statics
op quiet
op vfr
op el
op nod
op osname=%(QS_NAME)
op de '$(name) v%(QS_VERSION). $(config) build, $(timestr)'
anonymousexport=$(outdir)\$(name).lbc
export bsect16
export bsect32
export bsectexf

[config.0]
*out=$(outname) | nolink | \
     echo Linking ... | \
     ref2lbc lbc ..\runtime\$(name).ref $(outdir)\$(name).lbc | \
     $(ld) @$(&lnk) | lxlite /c:default_noofs16 $(outname) >%(DEVNUL) | \
     mkdir $(dlldir) | $(copy) $(outname) $(dlldir) >%(DEVNUL) | \
     zip -q -9 -X -D %(QS_BIN)\%(QS_ARCH) $(dlldir)\*.* | \
     $(del) $(dlldir)\$(outname) >%(DEVNUL) | \
     rmdir $(dlldir)
