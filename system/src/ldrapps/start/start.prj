[project]
name=start
version=0x0024

[config]
0=Common

[vars]
aa=@wasm
cc=@wcc386
cpp=@wpp386
ld=@wlink

*asm=$(outdir)\$(*cur_fp).obj|$(*cur_name)| @echo $(*cur_name) | \
     $(aa) $(ainc) $(aflags)$*.obj $(*cur_name)

*c=$(outdir)\$(*cur_fp).obj|$(*cur_name)| @echo $(*cur_name) | \
     $(cc) $(cinc) $(cflags)$*.obj $(*cur_name)

*cpp=$(outdir)\$(*cur_fp).obj|$(*cur_name)| @echo $(*cur_name) | \
     $(cpp) $(cinc) $(cppflags)$*.obj $(*cur_name)

*inc=$(outdir)\$(*cur_fp).h|$(*cur_name)| @echo $(*cur_name) | \
     inc2h $(*cur_name) $@ /p1

*ord=$(outdir)\$(*cur_fp)_ord.h|$(*cur_pref).ref| @echo $(*cur_name) | \
     ref2lbc ord $(*cur_pref).ref $@

aflags=-mf -4p -zq -i=%(QS_BASE)\hc -i=%(QS_APPINC) -i=%(QS_BASE)\init \
       -i=$(outdir) -fo=

cflags=-5s %(QS_CFLAGS) -s -mf -ox %(QS_WCCINC) -fi=%(QS_MHDR) \
       -i=$(outdir) -i=. -i=..\hc\rt -i=%(QS_BASE)\init -i=fs \
       -i=%(QS_BASE)\ldrefi\hc -fo=

;-ecd 
msgdir=msg
cppflags=-zv $(cflags)
cinc=
ccinc=$(cinc)
ainc=
bld_dir=bld
outdir=$(bld_dir)\$(config)
outname=$(name)
&lnk=$(outdir)\$(name).lnk
&bldlevel=$(msgdir)\bldlevel.lnk
&vercheck=$(outdir)\vercheck.inc
; if no svn - use "svnrev" env. variable
revnum=?[[$(svnrev)!$(svnrev)!%(svnrev)]]

[files]
..\runtime\qsinit.ord ..\runtime\start.ord
..\..\hc\inc\seldesc.inc ..\..\hc\inc\qsconst.inc
..\..\hc\inc\cpudef.inc  ..\..\init\inc\qsinit.inc
..\..\hc\inc\pci.inc     ..\..\hc\inc\pagedesc.inc
..\..\ldrefi\inc\efnlist.inc  ..\hc\inc\qschain.inc
..\..\init\inc\dskinfo.inc ..\..\init\inc\qspdata.inc
..\..\hc\inc\parttab.inc ..\..\hc\inc\ioint13.inc
..\..\hc\inc\filetab.inc ..\..\init\inc\qsvdata.inc
..\..\hc\inc\dpmi.inc
start.c misc\trapscrn.c main\diskio.c misc\clibio.c
loader\lxmisc.cpp loader\unpsix.asm loader\mdtdump.c misc\signals.c
main\memmgr.cpp misc\clib.c misc\time.c misc\exi.cpp misc\dce.cpp
cmd\ldrini.cpp cmd\shell.cpp cmd\extcmd.cpp misc\lists.cpp
misc\trap.asm misc\cliba.asm misc\envmgr.c misc\log.c misc\cache.cpp
vio\viofunc.c main\syshlp.c cmd\ksline.cpp pm\pages.c main\sysmt.c
loader\chain.cpp loader\chaina.asm loader\trace.cpp main\sysdump.c
main\sysf.asm main\pcibus.c vio\mbox.cpp pm\meminit.cpp main\notify.c
pm\ptdump.c misc\trapset.c misc\bitmap.c main\sysio.c
main\sysque.cpp misc\clibm.c misc\scanf.c vio\viobase.cpp
vio\vhbuf.c vio\vhvio.cpp main\sysioram.cpp main\sysionul.c

[make_footer]
$(outdir) : .DIRECTORY

MAKEDIRS : $(outdir)

hello : .SYMBOLIC
    @echo Building $(name)...

nolink : MAKEDIRS hello @@wait $(**ord) $(**inc) @@wait $(**c) $(**cpp) $(**asm)

clean : .CLEAN $(outdir)\*.obj $(outdir)\*.lst $(outdir)\*.h $(outdir)\$(name).*
    @echo Cleaning $(name)...

[deps]
cmd\extcmd.cpp = cmd\zz.cpp cmd\shpci.cpp
cmd\ldrini.cpp = cmd\pubini.cpp

; bldlevel.exe makes search in first 500k only, so adding this string as a
; comment for ZIP archive do nothing since archive size >500k. It just stored
; as a common file now.
[&bldlevel]
; bldlevel support
@#QS:$(vershort).$(revnum)#@  QSinit loader

[&vercheck]
db 'QSinit $(vershort), rev $(revnum)',0

[&lnk]
sys os2v2_dll
name $(outname)
op redefsok
file /[[$(**c)! !,]]
file /[[$(**cpp)! !,]]
file /[[$(**asm)! !,]]
file %(appinit_lib)\bld\Common\initdll.obj
lib %(appinit_lib)\imp_st.lib
lib %(appinit_lib)\cpplib.lib
lib %(WATCOM)\lib386\plib3s.lib
op map=$(name).map
sort global
op quiet
op el
op vfr
op togglerelocs
op noextension
op nod
op statics
op osname=%(QS_NAME)
op de '$(name) v$(vershort). $(config) build, $(timestr)'
anonymousexport=$(outdir)\$(name).lbc

[config.0]
*out=$(outname) | ..\runtime\$(name).ref nolink | \
     echo Linking ... | \
     ref2lbc lbc ..\runtime\$(name).ref $(outdir)\$(name).lbc | \
     $(ld) @$(&lnk) | lxlite $(outname) >%(DEVNUL) | \
     zip -q -0 -X -D %(QS_BIN)\%(QS_ARCH) $(&bldlevel) | \
     zip -q -9 -X -j %(QS_BIN)\%(QS_ARCH) sc\*.cmd | \
     zip -q -9 -X -j %(QS_BIN)\%(QS_ARCH) $(name) | \
     zip -q -9 -X -D -n lnk %(QS_BIN)\%(QS_ARCH) $(msgdir)\*.*
