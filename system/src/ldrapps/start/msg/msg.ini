; 1. tabs must be preserved here, used for formatting
; 2. ansi color selection is supported (even when ansi is off in shell)
; 3. unlike ANY other ini file, backslash at the end of line continues key on the next string
; 4. ^ acts as cr, & - too, but turns on "paragraph" mode until next ^ ( 1st char of the next
;    line & all spaces after it will be used as a "line header" for all "paragraph" lines).
[Help]
CHDIR=Displays the name of or changes the current directory:^^CHDIR [path]^CD [path]
CD=Displays the name of or changes the current directory:^^CHDIR [path]^CD [path]
CALL=Call a batch file:^^CALL filename^Ý does not search files in PATH, use cmd /c instead
GETKEY=Wait for user key:^^GETKEY [timeout [default]]^Ý 	timeout		timeout in seconds, wait forever if omitted^Ý 	default		default value, used when timeout occurs (0 if omitted)^Ý key code will be written into ERRORLEVEL var
PUSHKEY=Pushes key to keyboard queue:^^PUSHKEY [keycode]^Ý	keycode		keyboard code (as returned by BIOS), "space" is used if&Ý				omited
SHIFT=Changes the position of parameters in a batch file:^^SHIFT [/n]^Ý	/n		start shifting at the nth argument (ex.:/2)
MKDIR=Creates a directory:^^MKDIR path^MD path
MD=@@MKDIR
RESTART=Exit QSINIT and load another os2ldr:^^RESTART filename^Ý Command searches for the file in the root of boot partition or in direct&Ý path specified.^Ý On FAT16 partition NTLDR boot is also supported.
DIR=Print directory:^^DIR [options] [path]^Ý	/b		uses bare format (no heading)^Ý	/s		display all subdirectories^Ý	/w		uses wide list format^Ý	/tc		display file creation time^Ý	/np		do NOT make pause at the end of screen
TYPE=Print file(s) to console:^^TYPE [/boot] [/np] file [file ...]^Ý	/boot	boot partition assumed for src without path^Ý	/np		do NOT make pause at the end of screen
COPY=Copy file:^^COPY [/boot] [/beep] [/q] [/a] src1[+src2..] dst^Ý	/boot	boot partition assumed for src without path^Ý	/beep	beep when done, beep tone depends on success^Ý	/a		copy file attributes and time (not possible for boot source)^Ý	/q		be quiet^Ý there is no support of *? now, use FOR command ;)
REM=Records comments in a batch file:^^REM [comment]
CLS=Clears the screen:^^CLS
MEM=Print/modify memory information:^^\
 MEM [/a] [/o] [/m] [/np] [/log]^\
 MEM [/a] [/o] HIDE start length [, start length [, ...]]^\
 MEM SAVE filename start length^\
 MEM SAVE filename ALL^\
 Ý	/o		print memory will be available for OS/2^\
 Ý	/a		print PC memory table^\
 Ý	/m		print MTRR registers^\
 Ý	/np		do NOT make pause at the end of screen^\
 Ý	/log	copy command output to log^\
 Ý	ALL		save all RAM below 4Gb border (from 0 up to device memory space)^\
 Ý	HIDE	hide a part of memory from OS/2, /a and /o keys can be combined&\
 Ý			to print result of hiding^\
 Ý	SAVE	save memory to a disk file (block cannot cross 0 or 4Gb border.&\
 Ý			PAE mode will be forced if start >= 4Gb)^\
 Ý	start	start of memory block (page aligned for HIDE, hex value)^\
 Ý	length	length of memory block (page aligned for HIDE, hex value)^\
 Ý note, that SAVE command does not check address range for existence! Also,&\
 Ý ESC can be used to break save process.
PAUSE=Suspend processing of a batch file and display the message:^^PAUSE [message]
IF=Conditional processing in batch programs:^^IF [NOT] ERRORLEVEL number command^IF [/i] [NOT] string1==string2 command^IF [/b] [NOT] EXIST filename command^IF [NOT] LOADED modname command^Ý	NOT			execute command only if condition is false^Ý	ERRORLEVEL	last program exit code equal to or greater than the number^Ý	EXIST		check filename presence^Ý	LOADED		check for whether this module is loaded?^Ý	/b			check in the root directory of boot partition^Ý	/i			perform case insensitive string compare
GOTO=Directs to a label in batch program:^^GOTO label
DEL=Delete one or more files:^^\
 DEL|ERASE [/p] [/f] [/e] [/s] [/q] [/qn] [/nb] [/np] names^\
 Ý	/p		prompts for confirmation before deleting each file^\
 Ý	/f		force deleting of read-only files^\
 Ý	/e		delete empty subdirectories^\
 Ý	/s		delete specified files from all subdirectories^\
 Ý	/a[d|f]	accept "names" type: only directories or only files^\
 Ý	/i		ignore wrong argument types^\
 Ý	/q		do not ask on global wildcards^\
 Ý	/qn		do not print delete process^\
 Ý	/nb		do not allow to break process by ESC key^\
 Ý	/np		do NOT make pause at the end of screen
ERASE=@@DEL
BEEP=Play PC speaker sound:^^BEEP [/b] [/w] [freq,dur ...,...]^Ý	/w		wait until sound end^Ý	/b		wait until previous sound finished before start to play
RMDIR=Removes a directory:^^RMDIR [/s] [/q] path^RD [/s] [/q] path^Ý	/s		removes all subdirectories and files in it^Ý	/q		do not ask if ok to remove directory tree
UNZIP=Unzip file:^^UNZIP [/boot] [/beep] [/o] [/p] [/q] [/c] [/t] [/key] zip [dstpath] [files..]^UNZIP /view [/boot] [/np] [/key] zipname^Ý	/beep		beep when done, beep tone depends on success^Ý	/boot		load zip from boot partition (tftp in PXE boot)^Ý	/c			preload (cache) entire file before unzip it^Ý	/key		load zip from storage key^Ý	/[n]p		[no] pause at the end of screen^Ý	/o			overwrite existing files^Ý	/q			be quiet^Ý	/t			test archive integrity^Ý	/v[iew]		list archive contents^Ý	dstpath		existing directory to extract to^Ý	zip			name of source zip file or storage key (with /key option)
LOADMOD=@@LM
LM=Loads DLL module and stay it resident:^^\
 LM [/q] path [path ...]^\
 LM [/v] [/np] /list^\
 LM /u module [module ...]^\
 Ý	module	module name (as LISTed)^\
 Ý	path	module file name or path (suffix can be omited)^\
 Ý	/list	list all modules in system (verbose with /v)^\
 Ý	/u		force (DLL) module to unload (decrement usage counter)^\
 Ý	/np		do NOT make pause at the end of screen^\
 Ý	/q		be quiet on errors^\
 Ý note, that module can deny own unloading for some reason (for example,&\
 Ý it supports active instances of shared classes)^\
 Ý also note, that unloading of currently used DLL module will cause trap :)
RD=@@RMDIR
SET=Displays, sets, or removes cmd.exe environment variables:^^\
 SET [variable=[string]]^\
 SET /P variable=[prompt]^\
 ^	variable	Specifies the environment-variable name.\
 ^	string		Specifies a series of characters to assign to the variable.^\
 ^Type SET without parameters to display the current environment variables.^\
 ^SET command invoked with just a variable name, no equal sign or value will display the value of all variables whose prefix matches the name given to the SET command.  For example:^^	SET A^^would display all variables that begin with the letter "A".^^SET command will not allow an equal sign to be part of the name of a variable.^\
 ^Using of /P switch allows to read variable from the keyboard input. "prompt" value is an optional message before reading the line of input, quotes can be used around it.^\
 ^Environment variable substitution has been enhanced as follows:^\
 ^	%PATH:str1=str2%^\
 ^expands PATH variable with substitution of each occurrence of the "str1" to "str2". "str2" can be the empty string. "*" can be used before/after "str1" to include entire start/end of the string into replacement.^\
 ^May also specify substrings for an expansion.^\
 ^	%PATH:~10,6%^\
 ^expands PATH variable, but use only six characters starting from offset 10. Missing length value means the remainder of the string. If either number (offset or length) is negative, then the number used is the length of the environment variable value added to the offset or length specified.^\
 ^	%RAMDISK:~-1%^\
 ^must extract the last character of the RAMDISK value.^\
 ^	%PATH:~0,-2%^\
 ^extracts all but the last 2 characters of PATH.\
 ^^Some additional variables can be used in batch files in the same syntax as environment variable access:^\
 Ý	%CD% - current directory string.^\
 Ý	%DATE% - current date.^\
 Ý	%TIME% - current time.^\
 Ý	%LINES% - number of lines on the screen.^\
 Ý	%COLUMNS% - number of columns on the screen.^\
 Ý	%RAMDISK% - name of the ram disk (if available, in form hd?).^\
 Ý	%SAFEMODE% - safe mode active flag (1 or 0).^\
 Ý	%RANDOM% - random decimal number between 0 and 32767.^\
 Ý	%DBPORT% - current debug COM port address, empty if none.^\
 Ý	%ERRORLEVEL% - current ERRORLEVEL value.
ECHO=Displays messages, or turns command-echoing on or off.^^ECHO [ON | OFF]^ECHO [message]^Ý ECHO without parameters will print empty line.
POWER=Turn the system power state:^^POWER ON^POWER S[USPEND]^POWER OFF [/q]^Ý	/q		do not ask for confirmation^Ý APM suspend supported on very few models of motherboards.
DMGR=Disc manager command:^^DMGR command disk subcommand [options]^DMGR command /?^^Commands are: BS, CLONE, LIST, MBR, MODE, PM.^^Disk names supported:^	* [33;1mhd0..hd127[0;1m, [33;1mh0..h127[0;1m - for HDDs^	* [33;1mfd0..fd127[0;1m, [33;1mf0..f127[0;1m - for floppies^	* [33;1m0:..9:[0;1m, [33;1mA:..I:[0;1m - for mounted partitions^^Commands:^	* BS	- boot sector operations^	* CLONE	- disk copy operations^	* LIST	- partition list commands^	* MBR	- MBR and boot commands^	* MODE	- disk access settings^	* PM	- partition management commands
DMGR.MBR=Master boot record operations:^^\
 DMGR MBR disk BOOT [partition [letter]] [FORCE]^\
 DMGR MBR disk BOOTFILE [partition] [letter] filename^\
 DMGR MBR disk CODE^\
 DMGR MBR disk WIPE^\
 DMGR MBR disk ACTIVE partition^\
 Operations are:\
 ^	* BOOT		- boot from this disk/partition\
 ^	* BOOTFILE	- boot partition/diskette, but load boot sector from a file\
 ^	* CODE		- replace MBR code\
 ^	* WIPE		- wipe partition table (entire disk!)\
 ^	* ACTIVE	- set active primary partition^^\
 Ý	partition	is 0..x, partition list can be obtained from DMGR LIST^\
 Ý	letter		optional drive letter for OS/2 (ex. D:, ignored for floppy)^\
 Ý	filename	file with boot sector, size of it must be equal to disk's&\
 Ý				sector size^\
 Ý	FORCE		force boot if no active partition on disk^\
 Ý BOOT and BOOTFILE commands accept floppy disks too, but in this case&\
 Ý "partition" parameter must be omited.^\
 Ý On GPT disk ACTIVE command will set rare used "BIOS Bootable" bit in&\
 Ý partition attributes. Install QSINIT MBR code to make it workable.
DMGR.PM=Partition table operations:^^\
 DMGR PM disk INIT [GPT] [LVM]^\
 DMGR PM [disk] FREE^\
 DMGR PM disk CREATE index type [size [place]] [AF+/-]^\
 DMGR PM disk DEL[ETE] index^\
 Ý	FREE	get list of free unpartitioned space on disk / all disks.^\
 Ý	CREATE 	create partition^\
 Ý	DELETE 	delete partition^\
 Ý	INIT	write empty partition table to clean disk.^\
 Ý	index	free space index (from FREE command)^\
 Ý	type	partition type: "P[rimary]" or "L[ogical]"^\
 Ý	size	partition size in Mb or % of free space (ex.: 4000 or 78%)^\
 Ý	place	partition placement at: "S[tart]" or "E[nd]" of free space^\
 Ý	AF+/-	turn on/off Advanced Format alignment. Option is ON by default&\
 Ý			for GPT and OFF for MBR. For MBR it works [33;1monly[0;1m for creation at the end of free space.^\
 Ý	GPT		init disk in GPT format.^\
 Ý	LVM		write OS/2 LVM signatures. This option will force a strange&\
 Ý			format for huge drives (>500 Gb), but required for OS/2.^Ý^\
 Ý Better use OS/2 native LVM or DFSEE.^\
 Ý Only one of GPT or LVM can be specified.^\
 Ý Partition creation is dangerous operation in any way!
DMGR.BS=Boot sector operations:^^\
 DMGR BS volume operation [options].^Operations are:\
 ^	* CODE [bootfile] - replace boot sector code.\
 ^			Boot file name can be specified, for ex.^\
 ^				dmgr bs c: code os2ldr^\
 ^			will load OS2LDR file instead of default name.\
 ^	* WIPE	- wipe boot sector (destroy volume!).\
 ^	* DEBUG - replace boot sector code to debug one. This code only prints\
 &			incoming parameters and cannot be used for real boot.\
 ^	* DIRTY [ON|OFF] - query, set or reset dirty flag (any FAT or HPFS).\
 ^	* BPB   - print boot sector BPB.
DMGR.LIST=List of all available disks/partitions on disk:^^DMGR LIST [/v]^DMGR LIST ALL [FORCE]^DMGR LIST disk [FORCE]^Ý	all		print partition table for all drives in system^Ý	disk	is hd0..hd127^Ý	FORCE	do not use cached values, i.e. force scanning of partition table^Ý	/v		be verbose
DMGR.MODE=View and switch BIOS disk access settings:^^DMGR MODE ALL^DMGR MODE disk [mode]^DMGR MODE disk SIZE disksz^Ý	ALL		print access type for all disks in system^Ý	disk	is hd0..hd127^Ý	disksz	new disk size in sectors (use 0x prefix for the hex value),&Ý			* for autodetection attempt (by partition table contents)^Ý	mode	change access mode (CHS or LBA)^Ý	SIZE	force another disk size, in sectors. Option is [31;1mdangerous[0;1m and&Ý			usable only when BIOS returns wrong disk information.^Ý^Ý CHS mode can be used for small disks only (up to 8gb).^Ý By default QSINIT uses LBA mode for all small disks. If you have a problem&Ý with access to flash drive or ancient HDD - try to switch it to CHS.
DMGR.CLONE=Copy disk structure:^^DMGR CLONE dstdisk ALL srcdisk [SAMEID] [IGNSPT] [IDENT]^DMGR CLONE dstdisk STRUCT srcdisk [SAMEID] [IGNSPT] [IDENT] [NOWIPE]^DMGR CLONE dstdisk VOLUME srcdisk srcindex [dstindex]^Ý	ALL			copy partition structure and data (entire disk)^Ý	STRUCT		copy partition structure only (size and positions)^Ý	VOLUME		copy one partition's data to another^Ý	dstdisk		destination disk name^Ý	srcdisk		source disk name^Ý	srcindex	partition index on source disk^Ý	dstindex	partition index on destination disk (the same if omitted)^Ý	SAMEID		clone disk unique IDs (GPT GUIDs, LVM serial numbers)^Ý	IGNSPT		ignore "sectors per track" mismatch (on BIOS level)^Ý	IDENT		make identical copy of partition structure (i.e. byte to&Ý				byte, affects MBR disks only)^Ý	NOWIPE		prevents wiping of boot sectors on newly created partitions,&Ý				wiping is ON by default - to remove possible remains of old filesystem data.^Ý Destination must have enough space to fit the source.^Ý "Sectors per track" mismatch cannot be avoided on LVM level, i.e. if&Ý LVM info is present on source disk - disks must be close in size.^Ý Command knows nothing about file systems, it just copies the data.
LABEL=Creates, changes, or deletes the volume label:^^LABEL [drive:] [label]
FOR=Runs a command for each file in a set of files:^^FOR [/d] [/s] [/r] [/nb] %variable IN (set) DO command [parameters]^Ý	/d		scan for directory names instead of file names^Ý	/s		process subdirectories^Ý	/r		subst variable to path, relative to search directory^Ý	/nb		do not allow to break process by ESC key^Ý use quotes around (set) parameter if it contain spaces
MOUNT=Mount or list mounted volumes:^^MOUNT vol disk [partition]^MOUNT LIST [/v]^MOUNT QUERY varname disk [partition] [/v]^Ý	vol 		target volume letter (2:/C: .. 9:/J:)^Ý	disk		disk (hd0..hd127, fd0..fd127)^Ý	partition	partition index (0..x), partition index can be obtained&Ý				from DMGR LIST^Ý	LIST		list all mounted partitions^Ý	QUERY		query volume letter for specified disk/partition and save&Ý				it to environment variable. Command is silent by default.^Ý	varname		environment variable to save volume letter in form A:, &Ý				if partition is not mounted - string will be empty^Ý	/v			be verbose
UMOUNT=Unmount volume:^^UMOUNT vol [vol ...]^UMOUNT ALL^Ý	vol 		is 2:..9: or c:..j:
LVM=OS/2 LVM support command:^^\
 LVM ASSIGN disk partition [letter [FORCE]]^\
 LVM INFO disk [partition]^\
 LVM QUERY "name" [diskname [partname [disk]]]^\
 LVM RENAME disk [partition] "name"^\
 LVM SELECT [ALL|DISK] [E+|E-] {BOOT|[partname] disk}^\
 LVM WIPE disk^\
 LVM WRITE disk [MASTER]^\
 Ý	ASSIGN		change volume drive letter for OS/2^\
 Ý	INFO		print LVM disk/partition name and serial number^\
 Ý	QUERY		query disk and/or partition index of specified name^\
 Ý	RENAME		change disk or partition text name^\
 Ý	WIPE		wipe all LVM information from the disk^\
 Ý	WRITE		write LVM signatures to disk^\
 Ý	disk		is hd0..hd127^\
 Ý	partition	is 0..x, partition list can be obtained from DMGR LIST^\
 Ý	name		new name for disk or partition. Use quotes around it^\
 Ý	letter		drive letter for OS/2 (A..Z, empty for none)^\
 Ý	MASTER		this disk will be used as master boot disk (hd0), even if&\
 Ý				now it connected as secondary^\
 Ý	FORCE		force duplicate drive letters (not allowed by default)^\
 Ý	diskname	environment variable to store disk name^\
 Ý	partname	environment variable to store partition index^Ý^\
 Ý	SELECT		show selection dialog with "Boot Manager" volumes. ALL shows&\
 Ý				any available partition instead and DISK - disk selection, result will be saved into specified environment variable(s) or used to BOOT from this partition/disk immediately^\
 Ý	E+/E-		enumerate emulated disks (default is off in BOOT mode)^Ý^\
 Ý Better use OS/2 native LVM or DFSEE.
TRACE=Turn the system api trace:^^\
 TRACE ON [/q] module [group ...]^TRACE OFF [/q] [module [group ...]]^\
 TRACE LIST [/np] module [group]^\
 TRACE [!]PID[+] [/q] [pid [pid ...]]^\
 TRACE PIDLIST [/np]^\
 Ý	ON			turn trace on for selected module or function group in it^\
 Ý	OFF			turn trace off for all modules, one of it or group in it^\
 Ý	LIST		list active modules, groups or functions in group^\
 Ý	PID			trace only processes with specified pid values(s)^\
 Ý	PID+		same as PID and any new process^\
 Ý	!PID		trace all processes except specified pid values(s), empty&\
 Ý				pid list will restore default unfiltered trace^\
 Ý	!PID+		same as !PID but any new process is excluded too^\
 Ý	pid			one or more process ID to filter^\
 Ý	PIDLIST		prints active PID filter^\
 Ý	/q			be quiet on errors^Ý	/np			do NOT make pause at the end of screen^\
 Ý	module		module name (START, QSINIT, etc)^\
 Ý	group		function group or shared class name, as specified in api^\
 Ý use * as a module name to switch group in all currently traced modules.^\
 Ý active trace list is global, only pid values may be used to filter output.^\
 Ý trace output will be written into the log.
REN=Renames a file or files.^^RENAME [/q] [path]sourcename targetname.^REN [/q] [path]sourcename targetname.^Ý	/q	be quiet on errors^Ý you cannot specify a new drive or path for your destination file.
MTRR=View and setup MTRR registers.^^MTRR VIEW [/log]^MTRR [FIXED] ON/OFF^MTRR SET index address length cache^MTRR SET index ON/OFF^MTRR FIXED address length cache^MTRR DEFAULT cache^MTRR RESET^Ý	VIEW		view current registers state^Ý	RESET		reset register to initial values^Ý	SET			variable range registers setup^Ý	index		variable range register index (1..x)^Ý	address		start address (can be 64-bit, use 0x prefix for hex)^Ý	length 		length (power of 2, can be 64-bit)^Ý	cache		cache type: UC, WC, WT, WP, WB^Ý	DEFAULT		default cache type setup^Ý	FIXED		fixed range registers setup^Ý	ON/OFF		turn single register, fixed or variable MTRRs state^Ý	/log		copy VIEW command output to log
PCI=Print PCI bus information:^^PCI VIEW^PCI VIEW vendor:device [index]^PCI VIEW bus.slot.function^PCI VIEW ALL^PCI DUMP the_same_as_above^PCI WRITE vendor:device offset value size [index]^PCI WRITE bus.slot.function offset value size^Ý	ALL		show all devices^Ý	VIEW	view device(s) info^Ý	DUMP	dump device configuration space^Ý	index	zero-based index of device with such id in system^Ý	offset	offset in device configuration space (0..255)^Ý	value 	value to write^Ý	size  	value size in bytes: 1,2,4^Ý	/np		do NOT make pause at the end of screen^Ý	/log	copy command output to log
DATE=Displays or sets the date:^^DATE [/s]^DATE [/q] dd.mm.yyyy^Ý	/s		prompt for a new date^Ý	/q		be quiet
TIME=Displays or sets the system time:^^TIME [/s]^TIME [/q] hour:min:sec^Ý	/s		prompt for a new date^Ý	/q		be quiet^Ý only 24 hour time accepted.
MSGBOX=Displays message box window:^^MSGBOX "title" "message" [color] [align] [WIDE] [POPUP] [buttons] [default]^Ý	color		color scheme: GRAY, CYAN, GREEN, LGREEN, BLUE, LBLUE, RED,&Ý				LRED, WHITE^Ý	align		message text alignment: CENTER, LEFT, RIGHT, JUSTIFY^Ý	POPUP		show message box in separate screen session (MT mode only), &Ý				detached session can use this flag to show the message^Ý	WIDE		shows wide box^Ý	buttons		buttons: OK, OKCANCEL, YESNO, YNCANCEL^Ý	default		default button number: DEF1, DEF2, DEF3^Ý	title		message header text, use quotes around it^Ý	message		message text, use quotes around it.^Ý Result code will be written into ERRORLEVEL var: 0 for CANCEL, 1 for OK, &Ý 2 for YES and 3 for NO. Esc key pressed will return 0 (as CANCEL button).^Ý Note that [32;1mANSI[0;1m sequences in message box are not supported.
FORMAT=Format a volume:^^\
 FORMAT vol [options]^\
 Ý	/FS:type	format to specified file system (FAT, EXFAT and HPFS)^\
 Ý	/force		force format of volume with open files^\
 Ý	/quick		performs a quick format^\
 Ý	/wipe 		performs a long format with clearing disk data area^\
 Ý	/q			quiet format without confirmation (ram disks only, includes&\
 Ý				/force option)^\
 Ý FAT/FAT32 specific (FAT type is selected automatically):^\
 Ý	/a:size		overrides cluster size, supported values are: 512, 1024,&\
 Ý				2048, 4096, 8192, 16K, 32K, 64K^\
 Ý	/f:#		number of FAT copies (1 or 2, default is 2)^\
 Ý	/noaf		no advanced format alignment of internal FAT structures&\
 Ý				(HDD only, no aligment on floppy and "big" floppy devices)^\
 Ý EXFAT specific:^\
 Ý	/a:size		overrides cluster size (power of 2 in range: 512..32M)^\
 Ý	/noaf		no advanced format alignment of internal FAT structures^Ý^\
 Ý diskette low level format is not supported.^\
 Ý press ESC key to cancel long format.^\
 Ý use [32;1mCHCP[0;1m command to select HPFS codepage, default is 850.
CACHE=Setup physical disk read-ahead cache:^^CACHE size^CACHE OFF^CACHE [+disk] [-disk] ...^CACHE INFO^Ý	size	start cache with memory size in Mb or percents of avail (ex. 40%)^Ý	OFF		turn caching off^Ý	+disk	enable caching for this physical disk (ex. +hd0)^Ý	-disk	disable caching for this physical disk^Ý	INFO	query current cache state^Ý By default, cache if off for all floppy drives. You must re-mount it after&Ý change if you caching it.^Ý Total cache size is limited to 50% of maximum available free memory block.
MKSHOT=Screen shot saving control:^^MKSHOT ON [target]^MKSHOT OFF^Ý	ON		turn on screen shots^Ý	OFF		turn off screen shot grabbing^Ý	target	directory to store screen shot files^Ý Hot key is Alt-G (also Ctrl-P in serial port console sessions), output&Ý file name - grab_YYY.gif. New shot will use any of free indexes from 1 to 999, which can be found.
MODE=Configures system devices.^^\
 MODE device STATUS^\
 MODE device LIST^^\
 MODE CON [COLS=value] [LINES=value]^\
 MODE CON ID=value^\
 MODE CON SELECT^\
 MODE CON [RATE=value] [DELAY=value]^\
 MODE CON FONT=WIDTH,HEIGHT,filename^\
 MODE CON GMLIST [/v]^^\
 MODE SYS [DBPORT=value] [BAUD=value]^\
 MODE SYS "DBCARD=bus.slot.func,port_index"^\
 MODE SYS "DBCARD=vendor:device,[index,]port_index"^\
 MODE SYS [CM=1..16] [NORESET[=0]]^\
 MODE SYS HEAPFLAGS[=value]^MODE SYS [PAE] [MT]^^\
 Ý	STATUS		print current device status^\
 Ý	LIST		show list of available modes for this device^\
 Ý	COLS		set number of columns in console^\
 Ý	LINES		set number of lines in console^\
 Ý	ID			set mode by mode id (use "mode con list" to list modes)^\
 Ý	SELECT		show text mode selection dialog^\
 Ý	RATE		set keyboard repeat rate (0..31, 0 - fastest, 31 - slowest)^\
 Ý	DELAY		set keyboard repeat delay, ms (250, 500, 750, 1000)^\
 Ý	FONT		load binary font for graphic console (ex. font=8,14,ega.fnt)^\
 Ý	GMLIST		list all available graphic modes in system (verbose with /v)^\
 Ý	DBPORT		set debug COM port address (0x prefix for hex, -1 to off)^\
 Ý	DBCARD		use PCI COM port as debug COM port. Syntax is the same with&\
 Ý				INI file option.^\
 Ý	BAUD		set debug com port baud rate^\
 Ý	CM			set CPU clock modulation (1..16, 1 - 6.25% of full speed,&\
 Ý				16 - 100%). On older CPUs value step is rounded to 12.5%^\
 Ý	NORESET		do not reset CPU clock to 100% on QSINIT exit^\
 Ý	HEAPFLAGS	view or modify heap flags (see memmgr.h in SDK for details)^\
 Ý	PAE			switch QSINIT to PAE paging mode ([33;1mnon-reversable[0;1m)^\
 Ý	MT			turn on multithreading ([33;1mnon-reversable[0;1m)^\
 Ý clock modulation supported by Intel CPUs only^\
 Ý use quotes around parameters with spaces inside
RAMDISK=Creates RAM disk.^^\
 RAMDISK [MIN|SIZE=..] [MAX[HIGH]=..] [NOHIGH|NOLOW] [NOPT|DIV=..] [PERSIST]&ÿ		[NOFMT|[NO]FAT32|HPFS] [L:[ M:]]^\
 RAMDISK CLEAN^\
 RAMDISK INFO^\
 RAMDISK [NOHIGH|NOLOW] LOAD image^RAMDISK DELETE^\
 Ý	MIN			minimum guaranteed disk size, in megabytes^\
 Ý	SIZE		exact disk size, in mb (only one of MIN/SIZE can be used)^\
 Ý	MAX[HIGH]	maximum amount of memory above 4Gb to use, in megabytes^\
 Ý	NOHIGH		do not use memory above 4Gb (equal to MAXHIGH=0)^\
 Ý	NOLOW		use only memory above 4Gb^\
 Ý	NOPT 		do not create partitions on disk^\
 Ý	DIV			split disk to two partitions. Position specified in megabytes&\
 Ý				or percents (just append % sign to "pos")^\
 Ý	NOFMT		do not format partition(s) with FAT/FAT32^\
 Ý	NOFAT32		leave large partitions unformatted (do not use FAT32)^\
 Ý	FAT32		try to use FAT32 even for small partitions^\
 Ý	HPFS		format disk to HPFS. Note that HPFS access is read-only&\
 Ý				in QSINIT. Use [32;1mCHCP[0;1m to set codepage before creation.^\
 Ý	PERSIST		check memory above 4Gb for existing RAM disk and mount it&\
 Ý				instead of creation. If disk is not present, not valid or its size was changed - command will continue in normal way.^\
 Ý	L:			LVM drive letters for 1st and 2nd partition^\
 Ý	CLEAN		check memory above 4Gb for existing RAM disk and wipes it^\
 Ý	INFO		shows info about active ram disk^\
 Ý	DELETE		delete active ram disk^\
 Ý	LOAD		alternative way: create disk by using HDD image ("fixed size"&\
 Ý				VHD or plain image). "image" arg must be a valid QSINIT path or file in the root of boot disk.^Ý^\
 Ý If both MIN/SIZE and MAXHIGH omitted, RAMDISK will use all memory above&\
 Ý 4Gb and NO memory below 4Gb. If MIN/SIZE present - RAMDISK will use all of available memory to create disk with, at least, specified size. Result disk size can be larger if MIN is used. If only MAXHIGH key is used - RAMDISK will limit usage of memory above 4Gb to it.^Ý^\
 Ý LOAD image key forces RAMDISK to use all available memory to allocate disk&\
 Ý with source image size.^Ý^\
 Ý Two primary partitions can be created on disk. Use DMGR command to prepare&\
 Ý more strange configurations.^Ý^\
 Ý RAM disk name for DMGR command is available in %RAMDISK% shell variable.
LOG=Log query:^^LOG [/nt] [/d] [/l:x [/f]] SAVE filename^LOG [/nt] [/d] [/l:x [/f]] [/np] [/nc] TYPE^LOG CLEAR^Ý	SAVE	save log to file^Ý	TYPE	type log to screen^Ý	CLEAR	clear log^Ý	/l		limit log level to display (x=0..3). Without level value it^Ý			turns on level output^Ý	/nt		do NOT print log entry time mark^Ý	/d		print log entry date mark^Ý	/f		print log entry flags (only with /l)^Ý	/nc		non-colored output^Ý	/np		do NOT make pause at the end of screen
BOOTOS2=Boot OS/2 kernel:^^BOOTOS2 kernel [opts]^\
 Ý	kernel		kernel file (boot disk assumed, but QSINIT path accepted too)&\
 Ý				use "quotes" around this parameter if it contain spaces^\
 Ý	opts		comma separated option list^Ý^Ý Available options:^\
 Ý ALTE			push Alt-E key (invoke OS/4 embedded config.sys editor)^\
 Ý BAUDRATE=...	debug com port baud rate (by default - QSINIT value used)^\
 Ý CALL=...		call QSINIT batch file just before starting kernel^\
 Ý CFGEXT=EXT	use CONFIG.EXT file for boot, instead of CONFIG.SYS^\
 Ý CHSONLY		switch BIOS disk i/o to CHS mode^\
 Ý CPUCLOCK=...	set CPU clock modulation (Intel only, 1..16, 1 - 6.25%, 8 - &\
 Ý 				50%, 16 - 100%). Will affect all CPUs in MP system.^\
 Ý CTRLC			enable Ctrl-C check in OS/4 kernel debugger^\
 Ý DBPORT=...	debug com port address (by default - QSINIT value used)^\
 Ý DEFMSG		use OS2LDR.MSG file instead of embedded messages^\
 Ý FULLCABLE		COM port link cable with hardware flow control^\
 Ý LETTER=X		change boot drive letter for OS/2 (this option only supplies&\
 Ý				another drive letter for kernel, and do not change anything)^\
 Ý LOADSYM		load SYM file by loader, not a kernel (OS/4 after svn 4058)^\
 Ý LOGLEVEL=L	maximim level of QSINIT log to copy to kernel log (L=0..3)^\
 Ý LOGOMASK=...	bit mask of allowed color modes for OS/4 logo (1 - 8 bits,&\
 Ý				2 - 15 bits, 4 - 16 bits, 8 - 24 bits, 16 - 32 bits)^\
 Ý LOGSIZE=...	set log size .. kb (rounded down to nearest 64k, 32mb max)^\
 Ý MEMLIMIT=...	limit memory to ... Mb (more than 16 and less than available)^\
 Ý MFSDSYM=...	SYM file name for miniFSD (OS/4 after svn 4058)^\
 Ý NOAF			turn OFF advanced format aligning for disk i/o^\
 Ý NODBCS		prevent DBCS file(s) loading (os2dbcs, etc)^\
 Ý NOLOGO		do not show kernel logo^\
 Ý NOMTRR		drop all changes was made in MTRR registers^\
 Ý NOREV			do not show kernel revision^\
 Ý PKEY=...		push key (scancode value) to keyboard queue (for kernel)^\
 Ý PRELOAD		preload basedevs and PSD (OS/4 kernel only)^\
 Ý REMOVEMEM=...	hide block of memory from kernel^\
 Ý SOURCE=D		boot from another FAT or HPFS formatted partition, mounted to&\
 Ý				QSINIT drive D. Use @ for PAE RAM disk partition autodetect^\
 Ý SYM=...		SYM file name for debug kernel (up to 11 chars)^\
 Ý VALIMIT[=...]	VIRTUALADDRESSLIMIT value, in Mb (OS/4 after svn 4199 only),&\
 Ý				value from CONFIG.SYS is used if omited in key^\
 Ý VIEWMEM		open PC memory editor just before starting kernel
ATTRIB=Displays or changes file attributes:^^ATTRIB [+R|-R] [+A|-A] [+S|-S] [+H|-H] [/s] [/d] [/np] [path ...]^Ý	+/-		Sets/clears an attribute^Ý	R		Read-only file attribute^Ý	A		Archive file attribute^Ý	S		System file attribute^Ý	H		Hidden file attribute^Ý	/s		Processes all subdirectories^Ý	/d		Processes directories as well^Ý	/np		do NOT make pause at the end of screen^Ý	/q		be quiet on errors
GPT=View and set additional GPT parameters:^^GPT INFO disk [partition]^GPT RENAME disk partition "name"^GPT QUERY|QTYPE guid [diskname [partname [disk]]]^GPT ATTR disk partition [+S|-S] [+I|-I] [+B|-B] [+R|-R] [+H|-H] [+N|-N]^GPT TYPE disk partition typeguid^GPT ID disk [partition] guid^Ý	INFO		print GPT disk/partition information^Ý	QUERY		query disk or partition by its GUID. Use "disk" argument&Ý				to search on this disk only^Ý	QTYPE		the same as QUERY, but for type GUID, return first found^Ý	RENAME		change disk or partition text name^Ý	ATTR		query or set partition attributes (System, Ignore, Bios Boot, &Ý				Read only, Hidden, No automount)^Ý	TYPE		change partition type GUID^Ý	ID			change partition/disk GUID^Ý	disk		is hd0..hd127^Ý	partition	partition index^Ý	name		new name for partition (use quotes if name contain spaces)^Ý	typeguid	partition type GUID^Ý	guid		partition GUID (unique identifier)^Ý	diskname	environment variable to store disk name^Ý	partname	environment variable to store partition index
PUSHD=Stores the [32;1mcurrent directory[0;1m for use by the POPD command, then changes to the specified directory:^^PUSHD [/q] [path]^Ý	path	directory to make the current directory^Ý	/q		be quiet on errors^Ý PUSHD command pushes directory to the stack for POPD command.^Ý Stack is unique for every process.
POPD=Changes to the directory stored by the PUSHD command:^^POPD [/q]^Ý	/q		be quiet on errors
ANSI=Allows or prevents extended display support:^^ANSI [ON|OFF]^Ý	ON		allow extended display support^Ý	OFF		prevent extended display support^Ý Command without arguments shows current state.^Ý ANSI state changing affects only current process and any launched from it.
MOVE=Moves files and renames files and directories:^^MOVE [/q] file [file ...] target^MOVE [/q] dir target^Ý	file	file name to move (use wildcards for multiple files)^Ý	dir		directory to move^Ý	target	destination directory or file name^Ý	/q		be quiet^Ý You can use wildcards in the filename parameter of both the source and&Ý target files.^Ý Command does not overwrite existing files.
REBOOT=Reboots the system:^^REBOOT [/q] [WARM]^REBOOT [/q] COLD^Ý	COLD	perform cold reboot^Ý	WARM	perform warm reboot (default)^Ý	/q		do not ask for confirmation.
CHCP=Displays or sets the active code page number:^^CHCP [nnn]^CHCP LIST^Ý	nnn		specifies a code page number^Ý	LIST	shows list of supported code pages^Ý Command without arguments shows active code page number.^Ý Code page changing affects only disk i/o.
VHDD=Virtual disk image creation and mount:^^\
 VHDD MAKE|MM filename size [format] [sector]^\
 VHDD MOUNT filename^\
 VHDD INFO diskname^\
 VHDD UMOUNT diskname^\
 VHDD LIST^\
 Ý	MAKE		create new disk image^\
 Ý	MM			the same as above and then mount it^\
 Ý	MOUNT		mount disk image^\
 Ý	INFO		shows info about disk image^\
 Ý	UMOUNT		umount disk image^\
 Ý	LIST		list all mounted VHDD devices^\
 Ý	size		disk size in gigabytes or sectors. Use # before value for&\
 Ý				# of sectors (ex. #0x1F0000000)^\
 Ý	filename	name of the image file on mounted partition to create/use^\
 Ý	format		alters file format. One option available now - VHD (fixed&\
 Ý				size). Default is own dynamically expanded disk image format.^\
 Ý	sector		sector size (512, 1024, 2048 or 4096, default is 512, VHD&\
 Ý				accepts 512 bytes only).^\
 Ý	diskname	QSINIT disk name^\
 Ý Command available for partition management testing, but can be used for&\
 Ý common tasks - like backup of disk structures by "dmgr clone" command, for example.^\
 Ý Even if image file is not limited to 4Gb (on exFAT), it is a bad idea to&\
 Ý use "wipe format" on dynamically expanded disk images ;)
DELAY=Makes a delay:^^DELAY [timeout]^Ý	timeout		timeout in milliseconds (up to 4294 sec, 1 sec is default)^Ý use [32;1mGETKEY[0;1m for breakable timeout.
DETACH=Starts and detaches program:^^\
 DETACH command [args] ...^^\
 Ý Any program that is started with DETACH must be able to process programs&\
 Ý independently outside the control of the command processor. DETACH should not issue any input or output calls to the keyboard, or the display.^Ý^\
 Ý Command detaches CMD.EXE when it runs internal command or batch file.^\
 Ý Example:^\
 Ý		detach copy /boot /beep huge_file_via_pxe.zip c:\^
START=Starts a program in separate session:^^\
 START [/t "title"] [/b] [/i] [/d:list] command [args] ...^^\
 Ý	/b		launch the program session in a background^\
 Ý	/d		list of vio devices to use for this session^\
 Ý	/i		use environment of init process instead of current environment^\
 Ý	/t		set session title^\
 Ý	list	device list in form 0123..9ABC.., where eash symbol is a device&\
 Ý			number (0 = display device)^\
 Ý Command launches CMD.EXE when it runs internal command or batch file.^\
 Ý Use [32;1mSM[0;1m command to manage vio devices and sessions.
CMD=Command processor:^^\
 CMD [/i] [/o] [/c|k|e] [commands]^\
 Ý	/c		execute the specified command and then terminates^\
 Ý	/k		execute the specified command but remains^\
 Ý	/e		put command to the edit line and remains^\
 Ý	/i:name	use "name" as stdin (only with /c)^\
 Ý	/o:name	use "name" as stdout (only with /c)^Ý^\
 Ý Order of options is important.^\
 Ý Child process does not inherit i/o redirection!^\
 Ý Use quotes around parameters with spaces inside.^Ý^\
 Ý Ctrl-C can be used to terminate shell command and any active descendant&\
 Ý process when MT mode active. But note, that child able to disable Ctrl-C.
VMTRR=Set Write Combine for video memory:^^\
 VMTRR						- try to process automatically^\
 VMTRR hex_addr hex_length	- specify address and length (hex values)^\
 VMTRR vendor_id:device_id	- specify PCI ID of video card (hex values)^\
 VMTRR bus.slot.function		- specify PCI location of video card^^\
 Examples:^\
 Ý		VMTRR 0xD0000000 0x10000000^\
 Ý		VMTRR 1002:6719^\
 Ý		VMTRR 0.21.2
SM=Session and vio device management:^^\
 SM VADD name "init" [varname]^\
 SM VDEL device^\
 SM VLIST [/np]^\
 SM ATTACH|DETACH sesno device [device] ...^\
 SM FORE [/d:list] sesno^\
 SM LIST [/d:list] [/np]^\
 SM TITLE sesno ["title"]^\
 SM WHO [/q]^^\
 Ý	ATTACH	attach session to the specified device(s)^\
 Ý	DETACH	detach session from the specified device(s)^\
 Ý	FORE	switch session to foreground. Note, that command makes session&\
 Ý			foreground only on the devices where it selected^\
 Ý	LIST	prints session list^\
 Ý	TITLE	set session title or remove it (if "title" argument omited)^\
 Ý	VADD	add a vio device (now - serial port console only). Command may&\
 Ý			save created device number into environment variable^\
 Ý	VDEL	delete vio device (device 0 cannot be deleted)^\
 Ý	VLIST	list vio devices^\
 Ý	WHO		prints own session number (and save it into ERRORLEVEL var)^\
 Ý	device	device number (use "sm vlist" to query it)^\
 Ý	init	initialization string for a new device. For tty it has form&\
 Ý			"port_address;baud_rate", example of use COM1 as a console:^\
 Ý				[33;1msm vadd qs_vh_tty "0x3F8;19200"[0;1m^\
 Ý	list	device list in form 0123..9ABC.., where eash symbol is a device&\
 Ý			number (0 = display device)^\
 Ý	name	vio device to add (case sensitive, qs_vh_tty - serial port)^\
 Ý	title	title string, must be in quotes if contain spaces inside^\
 Ý	varname	environment variable to save created device number^\
 Ý	/d		device list, where to apply command^\
 Ý	/np		do NOT make pause at the end of screen^\
 Ý	/q		be quiet^\
 Ý To switch sessions use Alt-Esc on the screen and Ctrl-N in the serial port&\
 Ý console.
STOP=Terminate one or more processes:^^\
 STOP [/s] [/q] pid [pid ...]^\
 Ý	/s		single process (not a process tree)^\
 Ý	/q		be quiet on errors^\
 Ý	pid		process id^\
 Ý use [32;1mPS[0;1m command to list running processes.
PS=Lists information about processes:^^\
 PS [/t] [/m] [/a]^\
 Ý	/a		list all (same as /m /t)^\
 Ý	/m		list used modules^\
 Ý	/np		do NOT make pause at the end of screen^\
 Ý	/t		list threads
; qs errors
_E_000001=Duplicate call/operation
_E_000002=No memory available
_E_000003=The system cannot find the file specified
_E_000004=The system cannot find the path specified
_E_000005=Invalid file or path name
_E_000006=File or directory already exists
_E_000007=Access denied
_E_000008=Invalid parameter
_E_000009=Invalid object (internal error)
_E_00000A=Too many open files
_E_00000B=Operation rejected by sharing policy
_E_00000C=Operation failed due timeout
_E_00000D=Operation cannot be done with such argument combination
_E_00000E=Unsupported feature
_E_00000F=Zero pointer supplied (invalid parameter)
_E_000010=Too long file name or path
_E_000011=Invalid time value
_E_000012=Filesystem file size limit reached
_E_000013=Supplied buffer too small
_E_000014=Invalid handle type
_E_000015=Handle is valid, but for other process
_E_000016=Seek to the invalid position
_E_000017=Operation delayed until resource availability
_E_000018=Rename/move destination must be on the same volume
_E_000019=File is broken (disconnected from source)
_E_00001A=Object was not initialized
_E_00001B=Object is read-only
_E_00001C=Value too large
_E_00001D=Value too small
_E_00001E=Object already initialized
_E_00001F=Incompatible file format
_E_000020=Software fault occurs
_E_000021=User break, operation not complete
_E_000022=Missing codepage support (CPLIB module)
_E_000023=Not supported on EFI host
_E_000024=Invalid integer value
_E_000025=(Unexpected) end of file reached
_E_000026=CRC error in file
_E_000027=Entry not found
_E_000028=Directory is not empty
;
_E_010001=File is not LE/LX module
_E_010002=Bad module flags
_E_010003=Empty module: no start address, etc
_E_010004=Unsupported feature: export by name, etc
_E_010005=Broken file
_E_010006=No free selector
_E_010007=Object load error
_E_010008=Invalid page table
_E_010009=Additional code is not loaded
_E_01000A=Too many imported modules
_E_01000B=Invalid fixup
_E_01000C=There is no required ordinal
_E_01000D=Decompress error
_E_01000E=Invalid entry table entry
_E_01000F=DLL initialization routine denied load
_E_010010=CRC error in module, try to boot with UNZALL option on
_E_010011=Too manu exports
_E_010012=No file or file read error
_E_010013=Start object can`t be 16 bit
_E_010014=Stack object can`t be 16 bit
_E_010030=Bad module handle
_E_010031=Trying to free self
_E_010032=Trying to free system module
_E_010033=DLL term function denies unloading
_E_010034=Module execution in progress
_E_010035=Unable to execute DLL module
;
_E_020001=Disk read error 
_E_020002=Disk write error
_E_020003=Disk not ready
_E_020004=Disk is write protected
_E_020005=File system is not determined
_E_020006=Device or file system is not mounted
_E_020007=Invalid volume name
_E_020008=Invalid disk number value
_E_020009=Partition too large
_E_02000A=Disk full
_E_02000B=Failed to mount volume
_E_02000C=Failed to unmount destination volume
_E_02000D=Partition already mounted
_E_02000E=There is no free drive letter
_E_02000F=Unable to read disk data above 2TB (BIOS error)!
_E_020010=Unsupported sector size
_E_020011=Volume too large for selected filesystem
_E_020012=Volume too small to fit filesystem structures
_E_020013=Failed to select FAT type (16 or 32),^try another cluster size with /a key
_E_020014=Wrong cluster size
_E_020015=Custom boot file name length too long
_E_020016=Not compatible with current file system type
_E_020017=File size is not match file system information
_E_020018=File allocation data is incorrect
_E_020019=File system structures are invalid or damaged
_E_02001A=Volume is not a physical disk
_E_02001B=Specified name is a directory
;
_E_030001=Disk is big floppy formatted
_E_030002=Disk is not partitioned
_E_030003=Partition table is invalid
_E_030004=Action is not supported for GPT partition table type
_E_030005=Hybrid (GPT+MBR) partition table editing is not supported
_E_030006=Action is not supported for MBR partition table type
_E_030007=Unable to find partition index.
_E_030008=Partition is not primary
_E_030009=Partition is extended and cannot be active
_E_03000A=Rescan partition table first!
_E_03000B=There is no free space on this position
_E_03000C=Partition size too small
_E_03000D=Extended partition processing error
_E_03000E=There is no free space for primary partition record
_E_03000F=Invalid free space index specified
_E_030010=Free space is smaller than specified
_E_030011=Partition size too large (64-bit number of sectors)
_E_030012=GPT partition table header is broken
_E_030013=GPT header too large to process
_E_030014=Second copy of GPT partition table header is broken
_E_030015=Extended partition is not empty and cannot be deleted
_E_030016=Incompatible disks (sector size or # of sectors per track mismatch)
_E_030017=There is no free space on target disk for clone
_E_030018=Unable to use boot partition as a target
;
_E_040001=There is no LVM info on disk
_E_040002=There is no one of partition table info blocks
_E_040003=There is no info for one of existing partition
_E_040004=Serial number mismatch on disk
_E_040005=Geometry mismatch on disk
_E_040006=Already used or invalid drive letter
_E_040007=No partition with specified name
_E_040008=No disk with specified name
_E_040009=There is no space for LVM data
_E_04000A=Invalid serial number
;
_E_050001=MT mode does not started or disabled
_E_050002=Unable to install timer handlers
_E_050003=No local APIC in CPU (P5 and below)
_E_050004=Bad thread ID
_E_050005=Bad fiber index
_E_050006=Thread is waiting
_E_050007=Main or system thread cannot be terminated
_E_050008=Thread has finished
_E_050009=TLS slot number is invalid
_E_05000A=Unknown process ID
_E_05000B=Thread is not suspended
_E_05000C=Duplicate sync object name
_E_05000D=Caller does not own the semaphore
_E_05000E=Semaphore is busy
_E_05000F=Too many nested lock calls
_E_050010=Semaphore is free
_E_050011=Too many threads per process
_E_050012=Thread is suspended
_E_050013=Someone waits for this mutex or event
;
_E_060001=Video mode is not supported
_E_060002=Not supported in detached session
_E_060003=Too many vio devices
_E_060004=No vio device with such number
_E_060005=Invalid session number
_E_060006=Invalid vio handler device
_E_060007=Device with such parameters already exist
_E_060008=Device has no mode for one or more active sessions
_E_060009=Invalid mode id value

; errno.h values
_C_00001=The system cannot find the file specified.
_C_00002=Argument list too big.
_C_00005=Out of memory.
_C_00006=Access denied.
_C_00007=A duplicate file name exists.
_C_00009=The syntax of the command is incorrect.
_C_00011=Too many open files.
_C_00012=Disk is full.
_C_00014=Result too large.
_C_00016=(user break)
_C_00019=Device or resource busy.
_C_00021=I/O error.
_C_00022=Specified name is a directory.
_C_00023=Not a directory.
_C_00025=Block device required.
_C_00032=No process with specified PID.
_C_00034=Internal processing or memory access error.
_C_00035=File name too long.
_C_00036=There is no such device.
_C_00038=Function is not supported on EFI host.
_C_00045=Value too large.
_C_00047=Can not access a needed DLL module.
_C_10240=Device is not mounted.
_C_10241=Invalid operation.
; PCI bus codes
_PCI000000=non-VGA Compatible Device
_PCI000100=VGA Compatible Device
_PCI010000=SCSI
_PCI010100=Non Bus Master IDE controller
_PCI0101FA=Bus Master IDE controller  
_PCI010180=Bus Master IDE controller
_PCI010185=Serial ATA Controller
_PCI01018A=Bus Master IDE controller 
_PCI01018F=Serial ATA Controller
_PCI010200=Floppy Disk Controller
_PCI010300=IPI Bus Controller
_PCI010400=RAID Controller
_PCI010520=ATA (Single DMA)
_PCI010530=ATA (Chained DMA)
_PCI010600=SATA Controller
_PCI010601=SATA Controller - AHCI 1.0
_PCI010602=SATA Controller - Serial Storage Bus
_PCI010700=Serial Attached SCSI (SAS)
_PCI010701=Serial Attached SCSI (SAS) - SSB
_PCI010801=Non-Volatile memory (NVM) controller
_PCI010801=NVMHCI
_PCI010802=NVM Express
_PCI018000=Other Mass Storage Controller
_PCI020000=Ethernet
_PCI020100=Token Ring
_PCI020200=FDDI
_PCI020300=ATM
_PCI020400=ISDN
_PCI020500=WordFip
_PCI020600=PICMG 2.14
_PCI020700=InfiniBand
_PCI028000=Other Network
_PCI030000=VGA
_PCI030001=VGA+8514
_PCI030100=XGA
_PCI030200=3D
_PCI038000=Other Display
_PCI040000=Video Device
_PCI040100=Audio Device
_PCI040200=Telephony
_PCI040300=High-Definition Audio Device
_PCI048000=Other Multimedia
_PCI050000=RAM
_PCI050100=Flash
_PCI058000=Other Memory Device
_PCI060000=Host Bridge
_PCI060100=ISA Bridge
_PCI060200=EISA Bridge
_PCI060300=MCA Bridge
_PCI060400=PCI to PCI Bridge
_PCI060401=PCI to PCI Bridge (SSD)
_PCI060500=PCMCIA Bridge
_PCI060600=NuBUS Bridge
_PCI060700=Cardbus Bridge
_PCI060800=RACEway Bridge (Transparent)
_PCI060801=RACEway Bridge (End-point)
_PCI060900=PCI to PCI
_PCI060940=PCI to PCI (Primary bus to host)
_PCI060980=PCI to PCI (Secondary bus to host)
_PCI060A00=PCI to InfiniBand
_PCI068000=Other Brigde Device
_PCI070000=Serial
_PCI070001=Serial - 16450
_PCI070002=Serial - 16550
_PCI070003=Serial - 16650
_PCI070004=Serial - 16750
_PCI070005=Serial - 16850
_PCI070006=Serial - 16950
_PCI070100=Parallel Port
_PCI070101=Bidirectional Parallel Port
_PCI070102=ECP Parallel Port
_PCI070103=Parallel - IEEE1284
_PCI0701FE=Parallel - IEEE1284 Target
_PCI070200=Multiport Serial Controller
_PCI070300=Hayes Compatible Modem
_PCI070301=Hayes Compatible Modem, 16450
_PCI070302=Hayes Compatible Modem, 16550
_PCI070303=Hayes Compatible Modem, 16650
_PCI070304=Hayes Compatible Modem, 16750
_PCI070400=GPIB (ieee 488.1/2)
_PCI070500=SmartCard Controller
_PCI078000=Other Communication
_PCI080000=Generic PIC
_PCI080001=ISA PIC
_PCI080002=EISA PIC
_PCI080010=I/O APIC
_PCI080020=I/O(x) APIC
_PCI080100=Generic DMA
_PCI080101=ISA DMA
_PCI080102=EISA DMA
_PCI080200=Generic Timer
_PCI080201=ISA Timer
_PCI080202=EISA Timer
_PCI080203=HPET
_PCI080300=Generic RTC
_PCI080301=ISA RTC
_PCI080400=Generic PCI Hot Plug
_PCI080500=SD Host Controller (without DMA)
_PCI080501=SD Host Controller (with DMA)
_PCI080600=IOMMU
_PCI088000=Other Peripheral
_PCI090000=Keyboard
_PCI090100=Digitizer(Pen)
_PCI090200=Mouse
_PCI090300=Scanner
_PCI090400=Game Port
_PCI090410=Game Port (Legacy)
_PCI098000=Other Input
_PCI0A0000=Generic Docking Station
_PCI0A8000=Other Docking Station
_PCI0B0000=386
_PCI0B0100=486
_PCI0B0200=Pentium
_PCI0B0300=PentiumPro
_PCI0B1000=DEC Alpha
_PCI0B2000=PowerPC
_PCI0B3000=MIPS
_PCI0B4000=Coprocessor
_PCI0B8000=Other Processor
_PCI0C0000=FireWire (IEEE1394)
_PCI0C0010=OHCI FireWire (IEEE1394)
_PCI0C0100=Access.bus
_PCI0C0200=SSA
_PCI0C0300=USB (UHCI)
_PCI0C0310=USB (OHCI)
_PCI0C0320=USB (EHCI)
_PCI0C0330=USB (xHCI)
_PCI0C0380=USB
_PCI0C03FE=USB Device
_PCI0C0400=Fibre Channel
_PCI0C0500=SMBus Controller
_PCI0C0600=InfiniBand
_PCI0C0700=IPMI (SMIC)
_PCI0C0701=IPMI (Keyboard)
_PCI0C0702=IPMI (Block Tx)
_PCI0C0800=SERCOS (IEC61491)
_PCI0C0900=CANbus
_PCI0C8000=Other System Bus
_PCI0D0000=IrDA
_PCI0D0100=Consumer IR
_PCI0D1000=RF Controller
_PCI0D1100=Bluetooth
_PCI0D1200=Broadband
_PCI0D2000=802.1a controller
_PCI0D2100=802.1b controller
_PCI0D8000=Other Wireless
_PCI0E0000=I2O
_PCI0E8000=Other Io Bus
_PCI0F0100=Sat TV
_PCI0F0200=Sat Audio
_PCI0F0300=Sat Voice
_PCI0F0400=Sat Data
_PCI0F8000=Other Sat
_PCI100000=Encrypt Network
_PCI101000=Encrypt Entertainment
_PCI108000=Encrypt Other
_PCI110000=DPIO Modules
_PCI110100=Performance Counters
_PCI111000=Comm Sync, Time+Frequency Measurement
_PCI112000=Management Card
_PCI118000=Other Dsp
_PCI120000=Processing accelerator
_PCI130000=Non-Essential Instrumentation
_PCIFF0000=Undefined Class
; PCI command bits
_PCICMD_0001 = I/O Access
_PCICMD_0002 = Memory Access
_PCICMD_0004 = BusMaster
_PCICMD_0008 = Special Cycles
_PCICMD_0010 = MemWrite+Invalidate
_PCICMD_0020 = VGA Palette Snoop
_PCICMD_0040 = Parity Error Response
_PCICMD_0080 = Wait Cycles
_PCICMD_0100 = System Errors
_PCICMD_0200 = Back-To-Back Transactions
_PCICMD_0400 = Interrupt Disable
; Partition byte codes
_PTE_00=Free
_PTE_01=FAT12
_PTE_02=Xenix
_PTE_03=Xenix
_PTE_04=FAT16
_PTE_05=Extended
_PTE_06=FAT16B(chs)
_PTE_07=NTFS/HPFS
_PTE_0A=BootManager
_PTE_0B=FAT32 (chs)
_PTE_0C=FAT32
_PTE_0E=FAT16B
_PTE_0F=Extended
_PTE_11=FAT12 (hid)
_PTE_12=Service FAT
_PTE_14=FAT16 (hid)
_PTE_15=Extended(h)
_PTE_16=FAT16B(hid)
_PTE_17=NT/HPFS(h)
_PTE_1B=FAT32 (hid)
_PTE_1C=FAT32 (hid)
_PTE_1E=FAT16B(hid)
_PTE_1F=Extended(h)
_PTE_27=NT/HPFS(h)
_PTE_2A=AtheOS
_PTE_2B=AtheOS
_PTE_35=JFS
_PTE_42=Dynamic
_PTE_63=Unix
_PTE_64=Novell
_PTE_65=Novell
_PTE_66=Novell
_PTE_67=Novell
_PTE_68=Novell
_PTE_69=Novell
_PTE_7F=Exp.
_PTE_80=Minix
_PTE_81=Minix
_PTE_82=Linux
_PTE_83=Linux
_PTE_84=FAT16 (hid)
_PTE_85=Extended
_PTE_86=NT stripe
_PTE_87=NT stripe
_PTE_8B=NT stripe
_PTE_8C=NT stripe
_PTE_8D=FAT12 (hid)
_PTE_8E=Linux LVM
_PTE_90=FAT16 (hid)
_PTE_91=Extended(h)
_PTE_92=FAT16B(hid)
_PTE_93=Linux (hid)
_PTE_97=FAT32 (hid)
_PTE_98=FAT32 (hid)
_PTE_9A=FAT16B(hid)
_PTE_9B=Extended(h)
_PTE_A5=BSD
_PTE_A6=BSD
_PTE_A8=MacOS
_PTE_A9=BSD
_PTE_AB=MacOS
_PTE_B1=QNX
_PTE_B2=QNX
_PTE_B3=QNX
_PTE_DB=Dell FAT
_PTE_DE=Dell FAT
_PTE_EB=BeOS
_PTE_EE=UEFI
_PTE_EF=UEFI
_PTE_F8=VMware
_PTE_FC=VMware
_PTE_FF=Xenix
; Known GPT type GUIDs
024DEE41-33E7-11D3-9D69-0008C781F39F=MBR partition scheme
C12A7328-F81F-11D2-BA4B-00A0C93EC93B=EFI System
21686148-6449-6E6F-744E-656564454649=BIOS Boot
D3BFE2DE-3DAF-11DF-BA40-E3A556D89593=Intel Fast Flash
F4019732-066E-4E12-8273-346C5641494F=Sony boot
BFBFAFE7-A34F-448A-9A5B-6213EB736C22=Lenovo boot
E3C9E316-0B5C-4DB8-817D-F92DF00215AE=Microsoft Reserved
EBD0A0A2-B9E5-4433-87C0-68B6B72699C7=Windows data
5808C8AA-7E8F-42E0-85D2-E1E90434CFB3=Disk Manager metadata
AF9B60A0-1431-4F62-BC68-3311714A69AD=Disk Manager data
DE94BBA4-06D1-4D40-A16A-BFD50179D6AC=Windows Recovery Env.
37AFFC90-EF7D-4E96-91C3-2D7AE055B174=IBM GPFS
75894C1E-3AEB-11D3-B7C1-7B03A0000000=HP-UX data
E2A1E728-32E3-11D6-A682-7B03A0000000=Service Partition
0FC63DAF-8483-4772-8E79-3D69D8477DE4=Linux data
A19D880F-05FC-4D3B-A006-743F0F84911E=RAID
0657FD6D-A4AB-43C4-84E5-0933C84B4F4F=Linux Swap
E6D6D379-F507-44C2-A23C-238F2A3DF928=Linux LVM
933AC7E1-2EB4-4F13-B844-0E14E2AEF915=Linux /home
3B8F8425-20E0-4F3B-907F-1A25A76F98E8=Linux /srv
7FFEC5C9-2D00-49B7-8941-3EA10A5586B7=Plain dm-crypt
CA7D7CCB-63ED-4C53-861C-1742536059CC=LUKS
8DA63339-0007-60C0-C436-083AC8230908=Reserved
83BD6B9D-7F41-11DC-BE0B-001560B84F0F=FreeBSD Boot
516E7CB4-6ECF-11D6-8FF8-00022D09712B=FreeBSD data
516E7CB5-6ECF-11D6-8FF8-00022D09712B=FreeBSD swap
516E7CB6-6ECF-11D6-8FF8-00022D09712B=Unix File System
516E7CB8-6ECF-11D6-8FF8-00022D09712B=Vinum volume manager
516E7CBA-6ECF-11D6-8FF8-00022D09712B=ZFS
