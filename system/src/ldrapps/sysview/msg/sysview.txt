.topic NoContext=0
 QSINIT test app Ü
  ßßßßßßßßßßßßßßßß
Test program with some actual functionality: disk editor, partition
management, binary and text file editors, calculator, log viewer and
so on.

Common key sequences:
 * F10    / Ctrl-Q - menu
 * Alt-F3 / Ctrl-Z - close window
 * Alt-X  / Ctrl-W - exit from app

Also note, that Ctrl-E/S/D/X acts as arrow keys in Turbo Vision, this
may help in the terminal session.

.topic about_this_file=2
This file requires Borland C++ tvhc.exe to compile Ü
 ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß

It is not supplied with QSINIT, because this is temporary, first time
help implementation.

.topic KernName=2000
 Kernel file name Ü
  ßßßßßßßßßßßßßßßßß
Type kernel file name here directly or press "Select" to list mounted volumes.

Note, that missing path here means the root of boot volume, as well as "a:\".

.topic KernOptions=2001
 OS/2 boot options Ü
  ßßßßßßßßßßßßßßßßßß
"Preload BASEDEV" - (OS/4, >=2075) preload all files for BASEDEV boot stage
before starting to launch them (as Windows do).

"Edit CONFIG.SYS" - (OS/4) invoke embedded CONFIG.SYS editor during kernel startup.

"No logo" - do not show the kernel logo.

"No revision" - hide kernel revision string.

"Use OS2LDR.MSG" - use OS2LDR.MSG file instead of embedded messages.

"View memory" - open memory editor just before starting of kernel (when it
loaded and ready to launch).

"No AF alignment" - turn OFF Advanced Format aligning for the disk i/o. By
default most of long i/o ops are aligned to 4k (until IDE/SATA driver).

"Reset MTRR" - reset MTRR regisers to state before QSINIT was loaded.

.topic KernImport=2017
 Import kernel file Ü
  ßßßßßßßßßßßßßßßßßßß
To use this feature you should pack kernel files into REV_ARCH.ZIP file
and then put it into the root of boot drive.

This ZIP will be loaded by pressing "Imp[ort]" button and any file in it
can be selected as a kernel for current boot.

This option is available for intensive testing of a large number of different
kernel files. 

ZIP file name can be overridden by REV_ARCH_PATH environment variable.

.topic KernMemLimit=2018
 Memory limit for OS/2 Ü
  ßßßßßßßßßßßßßßßßßßßßßß
Limit available memory for OS/2 to specified value in Mb.
Value >=16 & less than total available memory below 4Gb.

Warp 3 kernels are always limited to <=1Gb, even without this parameter.

.topic RunExecute=2029
 System³Run Ü    (F4)
  ßßßßßßßßßßß
Run specified QSINIT program. Type program and arguments and press Go!
Shell commands can be used directly.

To run a batch file use command processor:

    cmd /c batch_file.cmd

[X] Echo ON - turn command echo ON.

[X] Pause on Exit - will make pause after program exit.

Be careful, shell commands executed in THIS process context. This mean
some side effects like ability to open and write into a file, which is
in editing in binary file editor, as well as missing reaction on Ctrl-C
in MT mode.

Another example is SET command, which affects this process environment,
when executed directly (i.e. without command processor).

.topic ViewLog=2030
 System³View log Ü
  ßßßßßßßßßßßßßßßß
View internal QSINIT log.

Log saved in cycled buffer with 64-256kb size, and sorted by time. Output
can be slightly different in compare with COM port logging.

Also, output can be distorted if you changed the system time via "time" command.

.topic PowerOff=2031
 System³Power off Ü
  ßßßßßßßßßßßßßßßßß
Power OFF the system, if APM (old BIOS power management method) is
available.

ACPI Power OFF is not supported now.

.topic CpuInfo=2033
 System³CPU info Ü
  ßßßßßßßßßßßßßßßß
Window with information about CPU, installed in system.

All information received via CPUID command.

Read Intel/AMD CPU manuals for details about every marked feature.

.topic SaveLog=2034
 System³Save log Ü
  ßßßßßßßßßßßßßßßß
Save internal QSINIT log to a file.

Remember - drive B: is QSINIT virtual memory drive.

Drive A: is a boot volume (during FAT boot it is writable too).

To save log on real disk use "mount" command in shell to mount physical
FAT/FAT32/exFAT partition to drive letters C:..J:

.topic MBRCode=2035
 Disk³MBR code Ü
  ßßßßßßßßßßßßßß
Replace Master boot record boot code to the QSINIT one.

You can try it for partitioned flash drives, for example.

.topic FOpen=2037
 Edit³Open Ü    (F3)
  ßßßßßßßßßß
The Open command displays the Open a File dialog box. In this
dialog box you select the text file you want browse in a
file editor.

.topic WSizeMove=2047
 Window³Size/Move Ü    (Ctrl-F5)
  ßßßßßßßßßßßßßßßßß
Choose this command to change the size or position of the active
window.

 ÜÜÜÜÜÜ
  Size
 ßßßßßß
If you press Shift while you use the arrow keys, you can change
the size of the active window. Once you've adjusted its size or
position, press Enter.

If a window has a Resize corner, you can drag that corner to
resize the window.

 ÜÜÜÜÜÜ
  Move
 ßßßßßß
When you choose Window³Size/Move, the active window moves in
response to the arrow keys. Once you've moved the window to where
you want it, press Enter.

You can also move a window by dragging its title bar with the
mouse.

.topic WNext=2048
 Window³Next Ü    (F6)
  ßßßßßßßßßßßß
Choose Next to cycle forwards through the windows on the desktop.

.topic WPrevious=2049
 Window³Previous Ü    (Shift-F6)
  ßßßßßßßßßßßßßßßß
Choose Previous to cycle backwards through the windows on the desktop.

.topic WClose=2050
 Window³Close Ü    (Alt-F3)
  ßßßßßßßßßßßßß
Choose Close to close the active window.

You can also click the Close box in the upper right corner to
close a window.

.topic WTile=2053
 Window³Tile Ü
  ßßßßßßßßßßßß
Choose Window³Tile to tile all file viewers on the desktop.

 ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
 ³ ÉÍÍÍÍÍÍÍÍÍÍÍÍ1ÍÍ»ÚÄÄÄÄÄÄÄÄÄÄÄÄ2ÄÄ¿ ³
 ³ º               º³               ³ ³
 ³ º               º³               ³ ³
 ³ º               º³               ³ ³
 ³ º               º³               ³ ³
 ³ ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ ³
 ³ ÚÄÄÄÄÄÄÄÄÄÄÄÄ3ÄÄ¿ÚÄÄÄÄÄÄÄÄÄÄÄÄ4ÄÄ¿ ³
 ³ ³               ³³               ³ ³
 ³ ³               ³³               ³ ³
 ³ ³               ³³               ³ ³
 ³ ³               ³³               ³ ³
 ³ ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ ³
 ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
             Tiled Windows

.topic WCascade=2054
 Window³Cascade Ü
  ßßßßßßßßßßßßßßß
Choose Window³Cascade to stack all file viewers on the desktop.

 ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ1Ä¿
 ³ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ2Ä¿
 ³³ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ3Ä¿
 ³³³ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ4Í»
 ³³³º                         º
 ³³³º                         º
 ³³³º                         º
 ³³³º                         º
 ³³³º                         º
 ÀÀÀÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼

        Cascaded Windows

.topic WZoom=2057
 Window³Zoom Ü   (F5)
  ßßßßßßßßßßßß
Choose Zoom to resize the active window to the maximum size. If
the window is already zoomed, you can choose this command to
restore it to its previous size.

You can also double-click anywhere on the window's title bar
(except where an icon appears) to zoom or unzoom the window.

.topic InitDisk=2060
 Disk³Init disk Ü
  ßßßßßßßßßßßßßßß
Use this command to init empty hard disk. It will make the following:

* write MBR boot code

* write empty partition table

* write LVM signature to disk. 

Written LVM geometry will be compatible with OS/2 DANIS and AHCI (>=1.27)
drivers.

.topic SectEdit=2061
 Binary data editor Ü
  ßßßßßßßßßßßßßßßßßßß
Physical sector/memory/binary file editor window.

Be careful, if you will press "Yes" in confirmation dialog - all changes in
the current block will be written to the destination (disk/memory location)!

All actual changes are marked by red color.

Available keys:

* Home/End - to start/end of line

* Arrows/PageUp/PageDown - navigation

* Tab or Shift-Tab - switch between hex/asc columns

* Backspace - undo changes in byte, left to cursor position

* Ctrl-Home - go to the first sector/block

* Ctrl-End  - go to the last sector/block

* F11 - {go to sector:SectGoto} or go to memory/file position.

* Ctrl-F/Ctrl-A - {find data:SectFind}/{find next:SectFindNext}

Note, that binary editor operates with constant size blocks. For physical disk
editing it is equal to disk sector size, memory editor uses fixed 256 bytes as
a block size and binary file editor uses sector size of a source disk.

Any changes in the current block are forced to be commited before going to
another one. Reverse of these changes (by Backspace key) is possible only
until commit.

.topic Goto=2062
 Binary³Go to Ü    (F11)
  ßßßßßßßßßßßßß
Go to sector on physical disk / physical memory location or binary file
position (depends on active window).

.topic SectFind=2063
 Binary³Find data Ü    (Ctrl-F)
  ßßßßßßßßßßßßßßßßß
Start searching on physical disk or in memory.

Use Ins key to switch between insertition/replacement in search string
editor and Backspace/Del key to delete bytes from the middle of it.

[X] case insensitive - will start case insensitive search for 'A'-'Z'
letters.

.topic SectFindNext=2064
 Binary³Find next Ü    (Ctrl-A)
  ßßßßßßßßßßßßßßßßß
Continue the last searching on physical disk / memory.

.topic Calendar=2065
 Calendar Ü
  ßßßßßßßßß
The calendar displays the current month, highlighting todays date. The
next and previous months can be viewed using the '+' or '-' keys
respectivly.  The mouse can also be used to change the month by pressing
the  or  icons.

.topic hcViewAsPT=2066
 Disk³View as Partition table Ü    (Ctrl-F2)
  ßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
View/Edit current sector in physical {sector editor:SectEdit} as
partition table.

You can modify values here, but you must be really familiar with partition
management to do this.

Buttons #1..#4 will switch editor window to 1st sector of appropriate
partition, but this navigation works right only if it was started from
sector 0. I.e. goto sector 0, press #3, in next slice of extended
partition open dialog again and press #2 and so on.

.topic FExit=2067
 System³Exit Ü    (Alt-X)
  ßßßßßßßßßßßß
The Exit command terminates this program.

.topic HelpCont=2068
 About Ü
  ßßßßßß
QSINIT is a some kind of boot loader ;) Basically it load OS/2 kernel ;),
but suitable for many other things - like playing tetris or implementing
boot time disk editor.

Common idea of it is creating a small 32 bit protected mode environment
with runtime and module execution support. It looks like old good DOS/4GW
apps, but without DOS at all.

This application is basically self-explaining.

To get help on shell commands - type "help command" or "command /?" in
shell.

Shell invoked by F3 key from boot time menu, or type "cmd" in
{run dialog:RunExecute} in this program.

Full shell command list is available via single "help" command.

.topic ViewAsBPB=2070
 Disk³View as Boot sector Ü    (Ctrl-F3)
  ßßßßßßßßßßßßßßßßßßßßßßßßß
View/Edit current sector in physical {sector editor:SectEdit} as
boot sector with BIOS Parameter Block.

BPB available in classic file systems: FAT, FAT32, HPFS and JFS.

.topic SectExport=2071
 Disk³Copy sector to file Ü
  ßßßßßßßßßßßßßßßßßßßßßßßßß
Copy one or more disk sectors to file on mounted partition.

.topic SectImport=2072
 Disk³Copy file to sector Ü
  ßßßßßßßßßßßßßßßßßßßßßßßßß
Replace one or more disk sector contents by data from a file.

.topic SectCopy=2073
 Disk³Copy sectors Ü
  ßßßßßßßßßßßßßßßßßß
Copy one or more disk sectors to other location on disk or another
disk in system.

.topic DmgrDisk=2074
 Select disk Ü
  ßßßßßßßßßßßß
Select a hard disk here.

QSINIT shows only disks, reported by BIOS.

If your disk (ex. USB stick) is not listed here - it can be unsuported
by BIOS code or big-floppy formatted.

Big-floppy disk still can be mounted in QSINIT command line (mount).

.topic DmgrPart=2075
 Select partition Ü
  ßßßßßßßßßßßßßßßßß
Select partition or free space to manage.

.topic DmgrAction=2076
 Partition actions Ü
  ßßßßßßßßßßßßßßßßßß
This list contain available actions for selected partition:

* "Boot" - boot from this partition. System will hang if no boot code available!

* "Delete" - delete partition.

* "Format" - format partition to FAT/FAT32/exFAT or HPFS file system.

* "Make active" - make primary partition active. 

For GPT disks this command set "BIOS Bootable" attribute to partition.
I.e. this partition will be booted in "BIOS mode boot", by MBR code of
GPT disk. 

You, also, must replace MBR code to provided by QSINIT to make working boot.

* "Mount" - mount partition to a QSINIT drive letter.

* "Unmount" - unmount partition from QSINIT.

* "LVM drive letter" - set OS/2 LVM drive letter.

* "LVM options" - set OS/2 LVM disk/volume name and minor options.

* "GPT options" - set partition type and name on GPT disks.

* "Clone" - clone partition data to another existing partition.

* "Dirty state" - switch file system`s dirty state. Looks like some
OS/IFS combinations may ignore this flag, but as a common case, partition
check should start during system boot.

* "Set label" - set/update volume label for FAT and HPFS partitions.

* "Create logical" - create logical partition here.

* "Create primary" - create primary partition here.

* "Boot OS/2" - boot OS/2 kernel from this partition without using bootstrap
code. Option available for HPFS and JFS only.

* "Sector view" - opens disk editor window on one of known sectors on
partition`s filesystem / on first sector of free space.

* "Update bootstrap code" - update boot sector code (all FAT types and HPFS).
Both FAT16 and HPFS boot code written to be compatible with IBM OS2LDR.

* "Install QSINIT" - install QSINIT binaries and bootstrap code. You, also,
must add this partition into your boot manager, of course. Option available
for any type of FAT only, because QSINIT unable to write to HPFS/JFS volumes.

.topic DmgrDlg=2077
 Disk management Ü    (Ctrl-P)
  ßßßßßßßßßßßßßßßß
This dialog allow to manage hard disks and partitions. 

To manage entire disk select disk first, then disk action from action list.

To manage partition - select disk, then partition on it and then action from
partition action list.

.topic DmgrDiskAction=2078
 Disk actions Ü
  ßßßßßßßßßßßßß
This list contain actions on entire disk. Be careful with any of this:

* "Boot" - boot MBR code of this disk

* "Detect size" - try to detect disk size from data on it. Option available
when disk size is 0 (BIOS returns NO disk information) or partition table
error occurs (which may be the consequence of wrong disk size, reported by
BIOS).

* "Clone" - clone disk structure (and data, optionally). Option available
only if exist empty disk of appropriate size.

* "Init disk" - initialize MBR on empty disk (i.e. prepare it to use).
This action can optionally write LVM signature.

* "Init disk (GPT)" - write GPT partition table to the empty disk (GPT is not
supported in OS/2, but QSINIT can operate it).

* "Replace MBR code" - replace MBR code to provided by QSINIT. This code is
compatible with OS/2 boot. Option is available for GPT disks too.

* "Restore MBR backup" - restore partition structure from backup image file. Option
available only when disk is empty, i.e. MBR destroyed (sector have no 55 AA signature).

* "Update LVM info" - update LVM info (option available only when LVM data
has one or more correctable errors).

* "Save MBR backup" - save partition structure to VHDD image file. This file can
be used to restore it (when MBR will be damaged). File can also be mounted by
VHDD shell command as a common QSINIT disk.

* "Wipe disk" - wipe partition table (ENTIRE DISK!)

* "Write LVM info" - write LVM information to a non-LVM disk. Option suitable
for disks smaller than 500Gb, prepared in other operating systems. Partitions
on larger disks should be created in OS/2, DSFEE or QSINIT.

* "Mount (big floppy)" - mount entire disk to QSINIT drive letter (big floppy mode).
Option available only for empty or big floppy disks.

* "Format", "Unmount", "Install QSINIT", "Update bootstrap code", "Dirty state"
and "Set label" are simular to the same actions for {partitions:DmgrAction},
but available only for already mounted (in QSINIT) big floppy disk.

.topic DmgrPtCreate=2079
 Create partition Ü
  ßßßßßßßßßßßßßßßßß
Type size in megabytes or percents of free block size here (ex.: 400000 or 50%).

[X] at the end of free space - create partition at the end of free space.

[X] AF aligment - align partition start sector to 4k (Advanced Format alignment).
Note, that on MBR disks option is avalable only when you create partition at
the end of free space.

You can check the success in DMGR command listing (F7 in QSINIT application menu),
the last digit of LBA value should be 0 or 8 for AF aligned partition.

.topic DmgrRescan=2081
 Rescan disks Ü
  ßßßßßßßßßßßßß
Force rescanning of partition table on all disks.

This action is not required by default, but can be used in some rare cases,
like update after manual partition table editing in sector editor.

.topic DlatDlg=2082
 Disk³View as DLAT sector Ü    (Ctrl-F4)
  ßßßßßßßßßßßßßßßßßßßßßßßßß
View/Edit current sector in physical {sector editor:SectEdit} as
LVM DLAT service sector. This sector located at the end of first track and
before any extended partition slice sector.

Note, that DLAT sector has CRC value, dialog will recalculate it automatically.

.topic Calculator=2100
 Calculator Ü
  ßßßßßßßßßßß
This calculator operates only with signed 64-bit integer values. Value
representation can be decimal, hexadecimal or octal.

 * ESC - clear
 * "_" - sign change (+/-), decimal mode only
 * "x" - switch hex/dec mode
 * "o" - switch octal/dec mode
 * "p" - power of
 * "!" - binary not
 * "m" - save to memory
 * "r" - get from memory
 * "%" - mod
 * "<>" - shift to left/right
 * "^|&" - binary xor/or/and
 * "+-/*" - i hope you know ;)

.topic MemEdit=2101
 Edit memory Ü
  ßßßßßßßßßßßß
View/edit PC memory.

Also see {binary edit window:SectEdit} for details.

Memory editor operates with 256 byte blocks. When you leave this block
editor will ask for update actual memory.

Note that in non-paging mode QSINIT shows all memory, but below 4Gb only. In
paging mode QSINIT shows all physical memory, but device space at the end of
4th gigabyte is NOT mapped and unaccessible. This is not so bad, because
walking over it in the memory editor can cause deadlocks.

.topic SectGoto=2102
 Disk³Go to sector Ü    (F11)
  ßßßßßßßßßßßßßßßßßß
Type physical disk sector number to go to.

Use decimal values or C language hex notation (0xA1B2C3D4).

.topic DskClone=2112
 Disk clone Ü
  ßßßßßßßßßßß
Clone disk to any available empty disk.

Options:

* "Clone IDs" - clone all known disk identifiers (serial numbers and so on).

* "Copy MBR code" - copy MBR code from source disk.

* "Identical" - make sector-to-sector copy of source disk partition table
structures (affects MBR only).

* "Ignore CHS mismatch" - ignore "sector per track" value miscmatch on BIOS
level. If LVM info is available on source disk - it can produce CHS mismatch
too, but this case is unavoidable (Disks must be close in size to avoid this).

* "Wipe old data" - (Structure only) wipe partition boot sectors on target disk
after copying. This is required because some old data can be available in it.
Turn this option OFF if you restoring MBR structure from backup disk to broken
original.

.topic VolClone=2121
 Partition clone Ü
  ßßßßßßßßßßßßßßßß
Clone partition data to any available partition.

Command knows nothing about file systems, it just copies data. If target
partition larger, than source - remaining part will be "lost" - because file
system structures not adjusted to new partition size.

Only one thing updated by copying process - common BPB in boot sector, if it
available. This occurs on HPFS, JFS and all types of FAT (including exFAT).

Command should clone any FAT (+exFAT), HPFS, JFS, NTFS - without any troubles.
It, also, updates bootsector files, listed in NTLDR`s boot.ini on FAT
partition.

.topic FileDlgCommon=2124
 Open/Save dialog Ü
  ßßßßßßßßßßßßßßßßß
To change disk just type A: or B: (and so on) in file name`s edit line.
This is QSINIT internal drive letter, not OS/2.

* A: - boot partition (FAT/FAT32/exFAT - writeable, HPFS and JFS - read-only)

* B: - virtual disk with QSINIT apps (contents of QSINIT.LDI archive)

* C:..J: - available to mount (use disk management dialog or MOUNT command)

To go directly to the existing directory - type full path in this line too.

.topic SetCodepage=2125
 Select codepage dialog Ü
  ßßßßßßßßßßßßßßßßßßßßßßß
You can select code page from a short list of supported by QSINIT here.

Code page affects on some things over system:

* file names with national symbols (chr codes > 127) on FAT and JFS volumes. These
files unaccessible without codepage selected.

* HPFS format. Without code page selection, HPFS format assumes page 850 (which
is default by HPFS design). Because HPFS.IFS codepage support is broken
millenium ago, it is better to select native page number before formatting
a new partition.

Code page selection does NOT mean visibility of national language characters.
QSINIT still uses BIOS fonts by default - and these fonts have no such graphic.

But note, that some graphic console modes use russian (cp866) font.

.topic BinFilePos=2135
Type file position here as a hex value (i.e., without 0x prefix).
To use decimal value - you can convert is first in {áalculator:Calculator} window.

See also: {Binary file editor:BinEdit}

.topic BinEdit=2136
 Binary file editor Ü
  ßßßßßßßßßßßßßßßßßßß
View/edit file data in binary mode.

Also see {binary edit window:SectEdit} for details.

Binary editor operates with data, splitted to blocks. When you leave this block
editor will ask you for update actual file data on disk. Block size is equal to
sector size of physical disk, where file is placed.

All time, while this window is open - file is locked by SYSVIEW and any write
access to it from another process is prohibited.

.topic LVMOptionsDlg=2139
 LVM options Ü
  ßßßßßßßßßßßß
Here you can update some minor LVM options for current partition and entire
disk.

Options:

* "Disk serial" - the serial number assigned to this disk.

* "Boot serial" - the serial number of the disk used to boot the system. This is
the IBM`s attempt to resolve drive letter conflicts, not sure is it used at all.

* "Disk name" - the name assigned to the disk

* "Volume serial" - the serial number of the volume.    
                  
* "Partition serial" - the serial number of this partition.

* "Installable" - Installable volume (IBM installer checks it).

* "Boot manager" - volume/partition is on the Boot Manager Menu. Note, that
this option is only a flag in LVM information record, you need to update the
Boot Manager to include this partition into its list.

.topic KernLogSize=2140
 OEMHLP log size Ü
  ßßßßßßßßßßßßßßßß
Set log size for the resident part of the loader, in kb. This value
will rounded down to nearest 64k.

Boot log is available on OS/2 user level:

"copy ___hlp$ boot.log"  - with ACPI.PSD running

"copy oemhlp$ boot.log"  - without ACPI.PSD

.topic KernConfigExt=2141
 Change CONFIG.SYS extension Ü
  ßßßßßßßßßßßßßßßßßßßßßßßßßßßß
Use CONFIG.EXT file instead of CONFIG.SYS. File must be placed
in the root directory. EXT - extension, up to 3 chars.

.topic KernBatchName=2142
 Call batch file Ü
  ßßßßßßßßßßßßßßßß
Call QSINIT batch file just before starting the kernel.

Batch file name must be a fully qualified path in QSINIT! I.e. A:\BATCH.CMD
(boot disk), or C:\dir1\batch.cmd (from a mounted volume). "View memory" (if
specified) will be called just after and then kernel will be launched.

At this time kernel is loaded and fixuped in final memory location, but QSINIT
still fully functional. This is possible because QSINIT never touches kernel
memory areas.

.topic KernLogLevel=2143
 Log level Ü
  ßßßßßßßßßß
Maximum level of QSINIT log messages to copy to OS/2 kernel log. By
default - messages are not copied at all.

You should set log size too to use this option.

.topic SesNew=2144
 System|New session Ü
  ßßßßßßßßßßßßßßßßßßß
Command starts a new shell in a separate screen session. This, also, mean
activation of MT mode (multitasking) in QSINIT.

To switch between sessions use Alt-Esc key on the keyboard and Ctrl-N in
serial port console.

.topic SesList=2145
 System|Session list Ü    (Ctrl-F9)
  ßßßßßßßßßßßßßßßßßßßß
Session list dialog window. Note, that session list content has no dynamic
update and may be outdated.

Session and device numbers here are equal to used in SM shell command.

Asterisk on device number mean that session is active on this device.

Device 0 is always a display, 1 and further - serial port console.


.topic ProcInfo=2147
 System|Process information Ü
  ßßßßßßßßßßßßßßßßßßßßßßßßßßß
Dialog window with process list and detailed information. Note, that
window has no dynamic update and may be outdated. Use "Refresh" button to
force window update.

Thread CPU time data is available in MT mode only. Also, when MT mode started,
there is no any time information about thread life before.

Process or process tree can be killed here (including this running process).

Trying to kill pid 1 tree will kill all except it with launching of a new command
shell as result.

Killing process in the middle of the tree may cause screen distortion, because
both parent and child of it will start to share screen and keyboard in the same
session.

.topic VolLabelDlg=2154
 Volume label Ü
  ßßßßßßßßßßßßß
Set volume label. Can be used on all FAT types and on HPFS.

Volume label length is up to 11 characters.

Characters like +.,;=[]"*:<>? are rejected.

Case is preserved on exFAT only.
