[project]
name=hd4disk
version=0x0001

[config]
0=Debug
1=Release

[vars]
aa=@wasm
cc=@wcc
ld=@wlink
out=$(outdir)/

*asm=$(outdir)\$(*cur_fp).obj|$(*cur_name)| @echo $(*cur_name) | \
     $(aa) $(ainc) $(aflags)$*.obj $(*cur_name)

; wdis compiled file immediately, to check watcom code ;)
*c=$(outdir)\$(*cur_fp).obj|$(*cur_name)| @echo $(*cur_name) | \
     $(cc) $(cinc) $(cflags)$* $(*cur_name) | \
     @wdis -a -s=$(*cur_name) $*.obj >$*.asm

*dir=$(*cur_name)|.SYMBOLIC|@if not exist $* mkdir $*

*inc=$(outdir)\$(*cur_fp).h|$(*cur_name)| @echo $(*cur_name) | \
     inc2h $(*cur_name) $@ /p1

*cln=clean|.SYMBOLIC|@echo Cleaning ... | \
     @if exist $(outdir)\*.obj @del $(outdir)\*.obj | \
     @if exist $(outdir)\*.lst @del $(outdir)\*.lst | \
     @if exist $(outdir)\*.h @del $(outdir)\*.h | \
     @if exist $(outdir)\$(name).* @del $(outdir)\$(name).*

aflags=-mf -4p -zq -iinc -i..\..\..\ldrapps\doshlp -fo=

cflags=-ecd -fp3 -fpi87 -q -zl -zdp -zfp -zgp -5 -zp1 -zu -i=hc -i=$(outdir) \
        -s -wx -bt=os2 $(dbtype) $(dbdef) -fo=

-r -wx -xd

cinc=
ainc=
bld_dir=bld
outdir=$(bld_dir)\$(config)
outname=$(name).add
exedir=%(QS_BIN)
&lnk=$(outdir)\$(name).lnk

[vars.*.0]
; debug info for checking generated code in wdis
dbtype=-d2 -ofm
dbdef=-DDEBUG

[vars.*.1]
dbtype=-d0 -omrlis
dbdef=

[files]
$(bld_dir).dir $(outdir).dir clean.cln
..\..\..\hc\inc\pagedesc.inc
..\..\..\hc\inc\seldesc.inc
..\..\..\ldrapps\doshlp\inc\ldrparam.inc
..\..\..\ldrapps\doshlp\inc\doshlp.inc
switch.asm swcall.asm misc.asm pdmake.asm
strat.c

[make_footer]
MAKEDIRS : $(bld_dir).dir $(outdir).dir
    @echo Building $(name)...

nolink : $(**dir) @@wait $(**inc) @@wait $(**asm) $(**c)

# op el - can`t be used in .lnk file, it removes _REL32
# actually we have no any unusable code in driver ;)
[&lnk]
sys os2v2 physdevice
name $(outname)
file /[[$(**asm)! !,]]
file /[[$(**c)! !,]]
order clname HEADER
      clname DATA
      clname BSS
      clname DMARK
      clname CODE segment _TEXT segment CODEEND
      clname REL16
      clname REL32
op mixed1632
op map
op statics
sort global
op quiet
op de ' * $(name) * QSInit svn rev.$(svnrev) * $(config) build * $(timestr) * '
op nostub
import DOS32FLATDS DOSCALLS.370

[config.0,1]
*out=$(outname) | nolink | \
     @echo Linking ... | \
     $(ld) @$(&lnk) | lxLite.exe /c:basedev $(outname) > nul | \
     if EXIST $(exedir)\$(outname) del $(exedir)\$(outname) >nul | \
     copy $(outname) $(exedir) >nul
