[project]
name=qsinit

; 0.01 - first version
; 0.02 - stable kernel boot
; 0.03 - FAT switched to LFN
; 0.04 - rev 100, 1 year of svn, storage/log added
; 0.05 - rev 128, exceptions & trace added
; 0.06 - rev 150, mtrr, pci, vmtrr.exe, fat32 boot
; 0.07 - rev 168, 3 years ;), primary creation, fat32 format, lvm
; 0.08 - rev 200, cache, disk editor, wlink for binary files
; 0.09 - rev 225, PAE paging mode, nice disk management, graphic console
; 0.10 - rev 256, bootable PAE ram disk
; 0.11 - rev 277, 4 years, GPT support, huge disk i/o, memory view
; 0.12 - rev 282, zero-based FLAT mode, new linking of QSINIT binary 
; 0.13 - rev 300, console extensions, EFI build :)
; 0.14 - rev 320, 3 years of svn, exceptions in EFI, ANSI output
; 0.15 - rev 335, codepages, HPFS format, dmgr clone, class trace
; 0.16 - rev 360, linux build env, 5 years of this nice project ;)
; 0.17 - rev 378, mtlib, new i/o, process owned heap
; 0.18 - rev 394, "detach" command, exFAT support
; 0.19 - rev 405, floating point support, FatFs moved to START module
; 0.20 - rev 415, binary file editor, CD boot, svn uptime = 5 years :)
version=0x0020

;
; some notes about current crazy linking + WASM:
; * all assumes in 32-bit objects except unpack.asm must be FLAT.
; * all variables/offsets, which stay in 16-bit segment, must be defined NOT
;   in the same file with 32-bit code, who uses it and must be imported
;   into such files via 32-bit offset (i.e. 16 & 32 bit ASM code must be
;   splitted in order to generate correct fixups).
; * 16-bit code can use only offsets to 32-bit variables and functions,
;   relative & selector fixups does not supported by mkbin converter
;

[config]
0=Debug
1=Release
2=Verbose

[vars]
aa=wasm
cc=wcc386
cc16=wcc
chgn=chgnam

*asm=$(outdir)\$(*cur_fp).obj|$(*cur_name)| @echo $(*cur_name) | \
     $(aa) $(ainc) $(aflags)$*.obj $(*cur_name)

*c=$(outdir)\$(*cur_fp).obj|$(*cur_name)| @echo $(*cur_name) | \
     $(cc) $(cinc) $(cflags)$*.obj $(*cur_name)

*cc=$(outdir)\$(*cur_fp).obj|$(*cur_pref).c| @echo $(*cur_fp).c | \
     $(cc16) $(ccinc) $(ccflags)$*.obj $(*cur_pref).c | \
     $(chgn) misc\init16.pat $@ >%(DEVNUL)

*inc=$(outdir)\$(*cur_fp).h|$(*cur_name)| @echo $(*cur_name) | \
     inc2h $(*cur_name) $@ /p1

&ver=inc\version.inc

aflags=-d1 -mt -zq -6p -i=%(QS_BASE)\hc -fo=

cflags=-4s -ecd %(QS_CFLAGS) -zld -s -mf -os -Ihc -i=hc -i=fat -i=zip \
       -i=$(outdir) -i=%(QS_APPINC) -fo=

ccflags=-ecd -fp3 -fpi87 -q -zl -5 -zp1 -i=hc -i=$(outdir) -s -os \
        -nc=LCODE -nt=TEXT16 -bt%(QS_NAME) -fo=

ld=@wlink

cinc=
ccinc=$(cinc)
ainc=
outdir=bld\$(config)
&watlnk=$(outdir)\qsinit.lnk
; if no svn - use "svnrev" env. variable
revnum=?[[$(svnrev)!$(svnrev)!%(svnrev)]]
; export svn to cmd file for sdk packing
&sdkrev=?[[$(svnrev)!bld\sdkrev.cmd!]]

[vars.*.0]
cinc=-DDEBUG -DVERBOSE_LOG
ainc=-dDEBUG

[vars.*.1]
cinc=-ox

[vars.*.2]
cinc=-DDEBUG -DINITDEBUG -DVERBOSE_LOG
ainc=-dDEBUG -dINITDEBUG

[vars.linux]
&sdkrev=

[files]
..\hc\inc\ioint13.inc ..\hc\inc\seldesc.inc ..\hc\inc\qsconst.inc 
..\hc\inc\filetab.inc inc\qsinit.inc inc\dskinfo.inc inc\qsbinfmt.inc
..\hc\inc\parttab.inc inc\qspdata.inc inc\qsvdata.inc
start.asm pm_open.asm pm_main.asm meminit.cc misc\timer.asm init32.c
disk1.c misc\common.c misc\iniparm.c misc\unpack.asm misc\util16.asm
misc\text.asm misc\util.asm misc\viofunc.c misc\disk.asm misc\wcrt.asm
misc\membase.c misc\fileio.c misc\rmcall.asm misc\exptable.asm
fat\diskio.c fat\fmkfs.c misc\mdt.c misc\prn16.asm misc\vioroute.asm
misc\print.c misc\timer32.asm misc\process.c misc\task.asm misc\log.asm
fat\fatio.c
zip\puff.c zip\crc32.c zip\unzip.c

[deps]
start.asm = inc\version.inc

[make_footer]
$(outdir) : .DIRECTORY

MAKEDIRS : $(outdir)

hello : .SYMBOLIC
    @echo $(config) build ...

nolink : MAKEDIRS hello @@wait $(**inc) @@wait $(**asm) $(**c) $(**cc)

clean : .CLEAN $(outdir)\*.obj $(outdir)\*.lst $(outdir)\*.h $(outdir)\$(name).*
    @echo $(config) cleaned ...

[&ver]
db 'QSinit $(vershort), rev $(revnum), $(config) build at $(timestr)',0,10
db '@#QS:$(vershort).$(revnum)#@  QSinit loader',0

[&watlnk]
sys os2v2_dll
name $(outdir)\OS2LDR.DLL
file /[[$(**asm)! !,]]
file /[[$(**c)! !,]]
file /[[$(**cc)! !,]]
order clname INIT
      clname LCODE
      clname LDATA segment DATA16 segment CONST3 segment CONST4
      clname BSS16 segment BSSINIT segment _BSS16 segment BSSFINI
      clname CODE
      clname DATA
      clname BSS

#NOEMIT on any BSS produce wrong page list in LX here

op start=init32call
op mixed1632
op statics
op map=OS2LDR.MAP
sort global
op nod
op quiet
op togglerelocs

[&sdkrev]
set svnrev=$(svnrev)

[config.0,1,2]
*out=os2ldr | nolink | \
     @echo Linking ... | \
     $(ld) @$(&watlnk) | \
     mkbin -hdr -pack $(outdir)\OS2LDR.DLL OS2LDR
